{
  "openapi": "3.0.4",
  "info": {
    "title": "KSeF API TE",
    "description": "**Wersja API:** 2.0.0 (build 2.0.0-rc2-te-20250725.2+5adfde843e2c34f7d63e9a50dccbb9dab79bc320)<br>\r\n**Klucze publiczne** Ministerstwa Finansów (dla danego środowiska): [Pobierz klucze](#tag/Certyfikaty-klucza-publicznego)<br>\r\n**Historia zmian:** [Changelog](#)<br>\r\n**Rozszerzona dokumentacja API:** [ksef-docs](https://github.com/CIRFMF/ksef-docs/tree/main)\r\n",
    "version": "v2"
  },
  "paths": {
    "/api/v2/auth/sessions": {
      "get": {
        "tags": [
          "Aktywne sesje"
        ],
        "summary": "Pobranie listy aktywnych sesji",
        "description": "Zwraca listę aktywnych sesji uwierzytelnienia.",
        "parameters": [
          {
            "name": "x-continuation-token",
            "in": "header",
            "description": "Token służący do pobrania kolejnej strony wyników.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Rozmiar strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/sessions/current": {
      "delete": {
        "tags": [
          "Aktywne sesje"
        ],
        "summary": "Unieważnienie aktualnej sesji uwierzytelnienia",
        "description": "Unieważnia sesję powiązaną z tokenem użytym do wywołania tej operacji.\r\n\r\nUnieważnienie sesji sprawia, że powiązany z nią refresh token przestaje działać i nie można już za jego pomocą uzyskać kolejnych access tokenów.\r\n**Aktywne access tokeny działają do czasu minięcia ich termin ważności.**\r\n\r\nSposób uwierzytelnienia: `RefreshToken` lub `AccessToken`.",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/sessions/{referenceNumber}": {
      "delete": {
        "tags": [
          "Aktywne sesje"
        ],
        "summary": "Unieważnienie sesji uwierzytelnienia",
        "description": "Unieważnia sesję o podanym numerze referencyjnym.\r\n\r\nUnieważnienie sesji sprawia, że powiązany z nią refresh token przestaje działać i nie można już za jego pomocą uzyskać kolejnych access tokenów.\r\n**Aktywne access tokeny działają do czasu minięcia ich termin ważności.**",
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny sesji uwierzytelnienia.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/certificates/limits": {
      "get": {
        "tags": [
          "Certyfikaty"
        ],
        "summary": "Pobranie danych o limitach certyfikatów",
        "description": "Zwraca informacje o limitach certyfikatów oraz informacje czy użytkownik może zawnioskować o certyfikat KSeF.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateLimitsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/certificates/enrollments/data": {
      "get": {
        "tags": [
          "Certyfikaty"
        ],
        "summary": "Pobranie danych do wniosku certyfikacyjnego",
        "description": "Zwraca dane wymagane do przygotowania wniosku certyfikacyjnego PKCS#10.\r\n\r\nDane te są zwracane na podstawie certyfikatu użytego w procesie uwierzytelnienia i identyfikują podmiot, który składa wniosek o certyfikat.\r\n\r\n\r\n> Więcej informacji:\r\n> - [Pobranie danych do wniosku certyfikacyjnego](https://github.com/CIRFMF/ksef-client-docs/blob/main/certyfikaty-wewn%C4%99trzne-KSeF.md#2-pobranie-danych-do-wniosku-certyfikacyjnego)\r\n> - [Przygotowanie wniosku](https://github.com/CIRFMF/ksef-client-docs/blob/main/certyfikaty-wewn%C4%99trzne-KSeF.md#3-przygotowanie-csr-certificate-signing-request)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateEnrollmentDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "| ExceptionCode       | ExceptionDescription                                                                      | Details |\r\n|---------------------|-------------------------------------------------------------------------------------------|---------|\r\n| 25001               | Brak możliwości pobrania danych do CSR dla wykorzystanego sposobu uwierzytelnienia.       |         |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/certificates/enrollments": {
      "post": {
        "tags": [
          "Certyfikaty"
        ],
        "summary": "Wysyłka wniosku certyfikacyjnego",
        "description": "Przyjmuje wniosek certyfikacyjny i rozpoczyna jego przetwarzanie.\r\n\r\n> Więcej informacji:\r\n> - [Wysłanie wniosku certyfikacyjnego](https://github.com/CIRFMF/ksef-client-docs/blob/main/certyfikaty-wewn%C4%99trzne-KSeF.md#4-wys%C5%82anie-wniosku-certyfikacyjnego)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "certificateName",
                  "csr"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EnrollCertificateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollCertificateResponse"
                }
              }
            }
          },
          "400": {
            "description": "| ExceptionCode       | ExceptionDescription                                                                           | Details |\r\n|---------------------|------------------------------------------------------------------------------------------------|---------|\r\n| 25002               | Brak możliwości złożenia wniosku certyfikacyjnego dla wykorzystanego sposobu uwierzytelnienia. |         |\r\n| 25003               | Dane w CSR nie zgadzają się z danymi w użytym wektorze uwierzytelniającym.                     |         |\r\n| 25004               | Niepoprawny format CSR lub niepoprawny podpis CSR.                                             |         |\r\n| 25006               | Osiągnięto limit możliwych do złożenia wniosków certyfikacyjnych.                              |         |\r\n| 25007               | Osiągnięto limit dopuszczalnej liczby posiadanych certyfikatów.                                |         |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/certificates/enrollments/{referenceNumber}": {
      "get": {
        "tags": [
          "Certyfikaty"
        ],
        "summary": "Pobranie statusu przetwarzania wniosku certyfikacyjnego",
        "description": "Zwraca informacje o statusie wniosku certyfikacyjnego.",
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny wniosku certyfikacyjnego",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateEnrollmentStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "| ExceptionCode       | ExceptionDescription                                                                           | Details |\r\n|---------------------|------------------------------------------------------------------------------------------------|---------|\r\n| 25005               | Wniosek certyfikacyjny o podanym numerze referencyjnym nie istnieje.                           |         |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/certificates/retrieve": {
      "post": {
        "tags": [
          "Certyfikaty"
        ],
        "summary": "Pobranie certyfikatu lub listy certyfikatów",
        "description": "Zwraca certyfikaty o podanych numerach seryjnych w formacie DER zakodowanym w Base64.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "certificateSerialNumbers"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RetrieveCertificatesRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCertificatesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/certificates/{certificateSerialNumber}/revoke": {
      "post": {
        "tags": [
          "Certyfikaty"
        ],
        "summary": "Unieważnienie certyfikatu",
        "description": "Unieważnia certyfikat o podanym numerze seryjnym.",
        "parameters": [
          {
            "name": "certificateSerialNumber",
            "in": "path",
            "description": "Numer seryjny certyfikatu (w formacie szesnastkowym).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RevokeCertificateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "| ExceptionCode       | ExceptionDescription                                                                           | Details |\r\n|---------------------|------------------------------------------------------------------------------------------------|---------|\r\n| 25008               | Certyfikat o podanym numerze seryjnym nie istnieje.                                            |         |\r\n| 25009               | Nie można odwołać wskazanego certyfikatu, ponieważ jest już odwołany, zablokowany lub nieważny.|         |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/certificates/query": {
      "post": {
        "tags": [
          "Certyfikaty"
        ],
        "summary": "Pobranie listy metadanych certyfikatów",
        "description": "Zwraca listę certyfikatów spełniających podane kryteria wyszukiwania.\r\nW przypadku braku podania kryteriów wyszukiwania zwrócona zostanie nieprzefiltrowana lista.",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Rozmiar strony wyników",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageOffset",
            "in": "query",
            "description": "Numer strony wyników",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "description": "Kryteria filtrowania",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/QueryCertificatesRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryCertificatesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/security/public-key-certificates": {
      "get": {
        "tags": [
          "Certyfikaty klucza publicznego"
        ],
        "summary": "Pobranie certyfikatów",
        "description": "Zwraca informacje o kluczach publicznych używanych do szyfrowania danych przesyłanych do systemu KSeF.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublicKeyCertificate"
                  }
                },
                "example": [{"certificatePem":"-----BEGIN CERTIFICATE-----\n...\n-----END CERTIFICATE-----","validFrom":"2024-07-11T12:23:56.0154302+00:00","usage":["KsefTokenEncryption","SymmetricKeyEncryption"]}]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/testdata/subject": {
      "post": {
        "tags": [
          "Dane testowe"
        ],
        "summary": "Utworzenie podmiotu",
        "description": "Tworzenie nowego podmiotu testowego. W przypadku grupy VAT i JST istnieje możliwość stworzenia jednostek podrzędnych. W wyniku takiego działania w systemie powstanie powiązanie między tymi podmiotami.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubjectCreateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/testdata/subject/remove": {
      "post": {
        "tags": [
          "Dane testowe"
        ],
        "summary": "Usunięcie podmiotu",
        "description": "Usuwanie podmiotu testowego. W przypadku grupy VAT i JST usunięte zostaną również jednostki podrzędne.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubjectRemoveRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/testdata/person": {
      "post": {
        "tags": [
          "Dane testowe"
        ],
        "summary": "Utworzenie osoby fizycznej",
        "description": "Tworzenie nowej osoby fizycznej, której system nadaje uprawnienia właścicielskie. Można również określić, czy osoba ta jest komornikiem – wówczas otrzyma odpowiednie uprawnienie egzekucyjne.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PersonCreateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/testdata/person/remove": {
      "post": {
        "tags": [
          "Dane testowe"
        ],
        "summary": "Usunięcie osoby fizycznej",
        "description": "Usuwanie testowej osoby fizycznej. System automatycznie odbierze jej wszystkie uprawnienia.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PersonRemoveRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/testdata/permissions": {
      "post": {
        "tags": [
          "Dane testowe"
        ],
        "summary": "Nadanie uprawnień testowemu podmiotowi/osobie fizycznej",
        "description": "Nadawanie uprawnień testowemu podmiotowi lub osobie fizycznej, a także w ich kontekście.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TestDataPermissionsGrantRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/testdata/permissions/revoke": {
      "post": {
        "tags": [
          "Dane testowe"
        ],
        "summary": "Odebranie uprawnień testowemu podmiotowi/osobie fizycznej",
        "description": "Odbieranie uprawnień nadanych testowemu podmiotowi lub osobie fizycznej, a także w ich kontekście.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TestDataPermissionsRevokeRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/persons/grants": {
      "post": {
        "tags": [
          "Nadawanie uprawnień"
        ],
        "summary": "Nadanie osobom fizycznym uprawnień do pracy w KSeF",
        "description": "Rozpoczyna asynchroniczną operację nadawania osobom fizycznym uprawnień do pracy w KSeF.\r\n\r\n> Więcej informacji:\r\n> - [Nadawanie uprawnień](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#nadawanie-uprawnie%C5%84-osobom-fizycznym-do-pracy-w-ksef)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subjectIdentifier",
                  "permissions",
                  "description"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PersonPermissionsGrantRequest"
                  }
                ]
              },
              "example": {"subjectIdentifier":{"type":"Pesel","value":"15062788702"},"permissions":["InvoiceRead","InvoiceWrite"],"description":"Uprawnienia do odczytu i wysyłania faktur"}
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsOperationResponse"
                },
                "example": {"operationReferenceNumber":"20250626-EG-333C814000-C529F710D8-D2"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/entities/grants": {
      "post": {
        "tags": [
          "Nadawanie uprawnień"
        ],
        "summary": "Nadanie podmiotom uprawnień do obsługi faktur",
        "description": "Rozpoczyna asynchroniczną operację nadawania podmiotom uprawnień do obsługi faktur.\r\n\r\n> Więcej informacji:\r\n> - [Nadawanie uprawnień](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#nadanie-podmiotom-uprawnie%C5%84-do-obs%C5%82ugi-faktur)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subjectIdentifier",
                  "permissions",
                  "description"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EntityPermissionsGrantRequest"
                  }
                ]
              },
              "example": {"subjectIdentifier":{"type":"Nip","value":"7762811692"},"permissions":[{"type":"InvoiceRead","canDelegate":true},{"type":"InvoiceWrite","canDelegate":true}],"description":"Uprawnienia do odczytu i wysyłania faktur z możliwością nadania ich pośrednio"}
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsOperationResponse"
                },
                "example": {"operationReferenceNumber":"20250626-EG-333C814000-C529F710D8-D2"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/authorizations/grants": {
      "post": {
        "tags": [
          "Nadawanie uprawnień"
        ],
        "summary": "Nadanie uprawnień podmiotowych",
        "description": "Rozpoczyna asynchroniczną operację nadawania uprawnień podmiotowych.\r\n\r\n> Więcej informacji:\r\n> - [Nadawanie uprawnień](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#nadanie-uprawnie%C5%84-podmiotowych)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subjectIdentifier",
                  "permission",
                  "description"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EntityAuthorizationPermissionsGrantRequest"
                  }
                ]
              },
              "example": {"subjectIdentifier":{"type":"Nip","value":"7762811692"},"permission":"SelfInvoicing","description":"Uprawnienia do samofakturowania"}
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsOperationResponse"
                },
                "example": {"operationReferenceNumber":"20250626-EG-333C814000-C529F710D8-D2"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/indirect/grants": {
      "post": {
        "tags": [
          "Nadawanie uprawnień"
        ],
        "summary": "Nadanie uprawnień w sposób pośredni",
        "description": "Rozpoczyna asynchroniczną operację nadawania uprawnień w sposób pośredni.\r\n\r\n> Więcej informacji:\r\n> - [Nadawanie uprawnień](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#nadanie-uprawnie%C5%84-w-spos%C3%B3b-po%C5%9Bredni)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subjectIdentifier",
                  "permissions",
                  "description"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/IndirectPermissionsGrantRequest"
                  }
                ]
              },
              "example": {"subjectIdentifier":{"type":"Pesel","value":"15062788702"},"permissions":["InvoiceWrite","InvoiceRead"],"description":"Uprawnienia generalne do odczytu i wysyłania faktur, nadane w sposób pośredni"}
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsOperationResponse"
                },
                "example": {"operationReferenceNumber":"20250626-EG-333C814000-C529F710D8-D2"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/subunits/grants": {
      "post": {
        "tags": [
          "Nadawanie uprawnień"
        ],
        "summary": "Nadanie uprawnień administratora podmiotu podrzędnego",
        "description": "Rozpoczyna asynchroniczną operację nadawania uprawnień administratora podmiotu podrzędnego.\r\n\r\n> Więcej informacji:\r\n> - [Nadawanie uprawnień](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#nadanie-uprawnie%C5%84-administratora-podmiotu-podrz%C4%99dnego)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subjectIdentifier",
                  "contextIdentifier",
                  "description"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubunitPermissionsGrantRequest"
                  }
                ]
              },
              "example": {"subjectIdentifier":{"type":"Pesel","value":"15062788702"},"contextIdentifier":{"type":"InternalId","value":"7762811692-11111"},"description":"Administrator jednostki podrzędnej"}
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsOperationResponse"
                },
                "example": {"operationReferenceNumber":"20250626-EG-333C814000-C529F710D8-D2"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/eu-entities/administration/grants": {
      "post": {
        "tags": [
          "Nadawanie uprawnień"
        ],
        "summary": "Nadanie uprawnień administratora podmiotu unijnego",
        "description": "Rozpoczyna asynchroniczną operację nadawania uprawnień administratora podmiotu unijnego.\r\n\r\n> Więcej informacji:\r\n> - [Nadawanie uprawnień](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#nadanie-uprawnie%C5%84-administratora-podmiotu-unijnego)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subjectIdentifier",
                  "contextIdentifier",
                  "description"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EuEntityAdministrationPermissionsGrantRequest"
                  }
                ]
              },
              "example": {"subjectIdentifier":{"type":"Fingerprint","value":"CEB3643BAC2C111ADDE971BDA5A80163441867D65389FC0BC0DFF8B4C1CD4E59"},"contextIdentifier":{"type":"NipVatUe","value":"7762811692-DE123456789012"},"description":"Administrator podmiotu unijnego DE123456789012"}
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsOperationResponse"
                },
                "example": {"operationReferenceNumber":"20250626-EG-333C814000-C529F710D8-D2"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/eu-entities/grants": {
      "post": {
        "tags": [
          "Nadawanie uprawnień"
        ],
        "summary": "Nadanie uprawnień reprezentanta podmiotu unijnego",
        "description": "Rozpoczyna asynchroniczną operację nadawania uprawnień reprezentanta podmiotu unijnego.\r\n\r\n> Więcej informacji:\r\n> - [Nadawanie uprawnień](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#nadanie-uprawnie%C5%84-reprezentanta-podmiotu-unijnego)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subjectIdentifier",
                  "permissions",
                  "description"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EuEntityPermissionsGrantRequest"
                  }
                ]
              },
              "example": {"subjectIdentifier":{"type":"Fingerprint","value":"CEB3643BAC2C111ADDE971BDA5A80163441867D65389FC0BC0DFF8B4C1CD4E59"},"permissions":["InvoiceRead","InvoiceWrite"],"description":"Reprezentant podmiotu unijnego"}
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsOperationResponse"
                },
                "example": {"operationReferenceNumber":"20250626-EG-333C814000-C529F710D8-D2"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/common/grants/{permissionId}": {
      "delete": {
        "tags": [
          "Odbieranie uprawnień"
        ],
        "summary": "Odebranie uprawnień",
        "description": "Rozpoczyna asynchroniczną operacje odbierania uprawnienia o podanym identyfikatorze.\r\n\r\nTa metoda służy do odbierania uprawnień takich jak:\r\n- nadanych nadanych osobom fizycznym lub podmiotom do pracy w KSeF\r\n- nadanych podmiotom do obsługi faktur\r\n- nadanych w sposób pośredni\r\n- administratorów jednostek i podmiotów podrzędnych\r\n- administratorów podmiotów unijnych uprawnionych do samofakturowania\r\n- reprezentantów podmiotów unijnych\r\n\r\n> Więcej informacji:\r\n> - [Odbieranie uprawnień](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#odebranie-uprawnie%C5%84)",
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "description": "Id uprawnienia.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsOperationResponse"
                },
                "example": {"operationReferenceNumber":"20250626-EG-333C814000-C529F710D8-D2"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/authorizations/grants/{permissionId}": {
      "delete": {
        "tags": [
          "Odbieranie uprawnień"
        ],
        "summary": "Odebranie uprawnień podmiotowych",
        "description": "Rozpoczyna asynchroniczną operacje odbierania uprawnienia o podanym identyfikatorze.\r\nTa metoda służy do odbierania uprawnień podmiotowych.\r\n\r\n> Więcej informacji:\r\n> - [Odbieranie uprawnień](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#odebranie-uprawnie%C5%84-podmiotowych)",
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "description": "Id uprawnienia.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsOperationResponse"
                },
                "example": {"operationReferenceNumber":"20250626-EG-333C814000-C529F710D8-D2"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/operations/{operationReferenceNumber}": {
      "get": {
        "tags": [
          "Operacje"
        ],
        "summary": "Pobranie statusu operacji",
        "description": "Zwraca status operacji asynchronicznej związanej z nadaniem lub odebraniem uprawnień.",
        "parameters": [
          {
            "name": "operationReferenceNumber",
            "in": "path",
            "description": "Numer referencyjny operacji",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsOperationStatusResponse"
                },
                "example": {"status":{"code":200,"description":"Operacja zakończona sukcesem"}}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/invoices/ksef/{ksefNumber}": {
      "get": {
        "tags": [
          "Pobieranie faktur"
        ],
        "summary": "Pobranie faktury po numerze KSeF",
        "description": "Zwraca fakturę o podanym numerze KSeF.",
        "parameters": [
          {
            "name": "ksefNumber",
            "in": "path",
            "description": "Numer KSeF faktury.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "| ExceptionCode       | ExceptionDescription                                | Details                                                       | \r\n|---------------------|-----------------------------------------------------|---------------------------------------------------------------|\r\n| 21164               | Faktura o podanym identyfikatorze nie istnieje.     | Faktura o numerze KSeF {ksefNumber} nie została znaleziona.   |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/invoices/download": {
      "post": {
        "tags": [
          "Pobieranie faktur"
        ],
        "summary": "[mock]Pobranie faktury  na podstawie numeru KSeF oraz danych faktury",
        "description": "Faktura zostanie zwrócona wyłącznie, jeśli wszystkie dane wejściowe są zgodne z danymi faktury w systemie.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "ksefNumber",
                  "invoiceMetadata"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DownloadInvoiceRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/invoices/query": {
      "post": {
        "tags": [
          "Pobieranie faktur"
        ],
        "summary": "[mock] Pobranie listy metadanych faktur",
        "description": "Zwraca listę metadanych faktur spełniające podane kryteria wyszukiwania.",
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "description": "Indeks pierwszej strony wyników (domyślnie 0).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Rozmiar strony wyników(domyślnie 10).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Zestaw filtrów dla wyszukiwania metadanych.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subjectType",
                  "dateRange"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InvoicesQueryRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryInvoicesReponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/invoices/async-query": {
      "post": {
        "tags": [
          "Pobieranie faktur"
        ],
        "summary": "[mock] Inicjalizuje asynchroniczne zapytanie o pobranie faktur",
        "description": "Rozpoczyna asynchroniczny proces wyszukiwania faktur w systemie KSeF na podstawie przekazanych filtrów.\r\nWymagane jest przekazanie informacji o szyfrowaniu w polu `Encryption`, które służą do zaszyfrowania wygenerowanych paczek z fakturami.",
        "requestBody": {
          "description": "Zestaw filtrów dla wyszukiwania faktur.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "encryption",
                  "subjectType",
                  "dateRange"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InvoicesAsyncQueryRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitAsyncInvoicesQueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/invoices/async-query/{operationReferenceNumber}": {
      "get": {
        "tags": [
          "Pobieranie faktur"
        ],
        "summary": "[mock] Sprawdza status asynchronicznego zapytania o pobranie faktur",
        "description": "Pobiera status wcześniej zainicjalizowanego zapytania asynchronicznego na podstawie identyfikatora operacji.\r\nUmożliwia śledzenie postępu przetwarzania zapytania oraz pobranie gotowych paczek z wynikami, jeśli są już dostępne.",
        "parameters": [
          {
            "name": "operationReferenceNumber",
            "in": "path",
            "description": "Unikalny identyfikator operacji zwrócony podczas inicjalizacji zapytania.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncInvoicesQueryStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sessions": {
      "get": {
        "tags": [
          "Status wysyłki i UPO"
        ],
        "summary": "Pobranie listy sesji",
        "description": "Zwraca listę sesji spełniających podane kryteria wyszukiwania.",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Rozmiar strony.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sessionType",
            "in": "query",
            "description": "Typ sesji.\r\n| Wartość | Opis |\r\n| --- | --- |\r\n| Online | Wysyłka interaktywna (pojedyncze faktury). |\r\n| Batch | Wysyłka wsadowa (paczka faktur). |\r\n",
            "required": true,
            "schema": {
              "enum": [
                "Online",
                "Batch"
              ],
              "allOf": [
                {
                  "$ref": "#/components/schemas/SessionType"
                }
              ]
            }
          },
          {
            "name": "referenceNumber",
            "in": "query",
            "description": "Numer referencyjny sesji.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateCreatedFrom",
            "in": "query",
            "description": "Data utworzenia sesji (od).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateCreatedTo",
            "in": "query",
            "description": "Data utworzenia sesji (do).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateClosedFrom",
            "in": "query",
            "description": "Data zamknięcia sesji (od).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateClosedTo",
            "in": "query",
            "description": "Data zamknięcia sesji (do).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateModifiedFrom",
            "in": "query",
            "description": "Data ostatniej aktywności (wysyłka faktury lub zmiana statusu) w ramach sesji (od).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateModifiedTo",
            "in": "query",
            "description": "Data ostatniej aktywności (wysyłka faktury lub zmiana statusu) w ramach sesji (do).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Statusy sesji.\r\n| Wartość | Opis |\r\n| --- | --- |\r\n| Succeeded | Sesja przetworzona poprawnie.            W trakcie przetwarzania sesji nie wystąpiły żadne błędy, ale część faktur nadal mogła zostać odrzucona. |\r\n| InProgress | Sesja aktywna. |\r\n| Failed | Sesja nie przetworzona z powodu błędów.            Na etapie rozpoczynania lub kończenia sesji wystąpiły błędy, które nie pozwoliły na jej poprawne przetworzenie. |\r\n",
            "schema": {
              "enum": [
                "Succeeded",
                "InProgress",
                "Failed"
              ],
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommonSessionStatus"
              }
            }
          },
          {
            "name": "x-continuation-token",
            "in": "header",
            "description": "Token służący do pobrania kolejnej strony wyników.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsQueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sessions/{referenceNumber}": {
      "get": {
        "tags": [
          "Status wysyłki i UPO"
        ],
        "summary": "Pobranie statusu sesji",
        "description": "Sprawdza bieżący status sesji o podanym numerze referencyjnym.",
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny sesji.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionStatusResponse"
                },
                "example": {"status":{"code":200,"description":"Sesja interaktywna przetworzona pomyślnie"},"upo":{"pages":[{"referenceNumber":"20250626-EU-2EBD6FA000-242EB9B66D-43","downloadUrl":"https://ksef-api/api/v2/sessions/20250626-SO-2EBAD16000-2429DECA8E-E2/upo/20250626-EU-2EBD6FA000-242EB9B66D-43"}]},"invoiceCount":10,"successfulInvoiceCount":8,"failedInvoiceCount":2}
              }
            }
          },
          "400": {
            "description": "| ExceptionCode       | ExceptionDescription                                | Details                                                     | \r\n|---------------------|-----------------------------------------------------|-------------------------------------------------------------|\r\n| 21173               | Brak sesji o wskazanym numerze referencyjnym.       | Sesja o numerze referencyjnym {referenceNumber} nie została znaleziona.   |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/sessions/{referenceNumber}/invoices": {
      "get": {
        "tags": [
          "Status wysyłki i UPO"
        ],
        "summary": "Pobranie faktur sesji",
        "description": "Zwraca listę faktur przesłanych w sesji wraz z ich statusami, oraz informacje na temat ilości poprawnie i niepoprawnie przetworzonych faktur.",
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny sesji.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageOffset",
            "in": "query",
            "description": "Numer strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Rozmiar strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionInvoicesResponse"
                },
                "example": {"invoices":[{"ordinalNumber":1,"invoiceNumber":"FA/XPWIC-7900685789/06/2025","ksefNumber":"5265877635-20250626-010080DD2B5E-26","referenceNumber":"20250626-EE-2F15D39000-242207E5C4-1B","invoiceHash":"mkht+3m5trnfxlTYhq3QFn74LkEO69MFNlsMAkCDSPA=","receiveDate":"2025-07-11T12:23:56.0154302+00:00","status":{"code":200,"description":"Sukces"}},{"ordinalNumber":2,"referenceNumber":"20250626-EE-2F20AD2000-242386DF86-52","invoiceHash":"mkht+3m5trnfxlTYhq3QFn74LkEO69MFNlsMAkCDSPA=","receiveDate":"2025-07-11T12:23:56.0154302+00:00","status":{"code":404,"description":"Duplikat faktury","details":["Duplikat faktury. Faktura o numerze KSeF: 5265877635-20250626-010080DD2B5E-26 została już prawidłowo przesłana do systemu w sesji: 20250626-SO-2F14610000-242991F8C9-B4"]}}],"totalCount":2}
              }
            }
          },
          "400": {
            "description": "| ExceptionCode       | ExceptionDescription                                | Details                                                     | \r\n|---------------------|-----------------------------------------------------|-------------------------------------------------------------|\r\n| 21173               | Brak sesji o wskazanym numerze referencyjnym.       | Sesja o numerze referencyjnym {referenceNumber} nie została znaleziona.   |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/sessions/{referenceNumber}/invoices/{invoiceReferenceNumber}": {
      "get": {
        "tags": [
          "Status wysyłki i UPO"
        ],
        "summary": "Pobranie statusu faktury z sesji",
        "description": "Zwraca fakturę przesłaną w sesji wraz ze statusem.",
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny sesji.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceReferenceNumber",
            "in": "path",
            "description": "Numer referencyjny faktury.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceStatusResponse"
                },
                "example": {"referenceNumber":"20250626-EE-2F20AD2000-242386DF86-52","ordinalNumber":2,"receiveDate":"2025-07-11T12:23:56.0154302+00:00","status":{"code":440,"description":"Duplikat faktury","details":["Duplikat faktury. Faktura o numerze KSeF: 5265877635-20250626-010080DD2B5E-26 została już prawidłowo przesłana do systemu w sesji: 20250626-SO-2F14610000-242991F8C9-B4"]}}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sessions/{referenceNumber}/invoices/failed": {
      "get": {
        "tags": [
          "Status wysyłki i UPO"
        ],
        "summary": "Pobranie niepoprawnie przetworzonych faktur sesji",
        "description": "Zwraca listę niepoprawnie przetworzonych faktur przesłanych w sesji wraz z ich statusami.",
        "parameters": [
          {
            "name": "x-continuation-token",
            "in": "header",
            "description": "Token służący do pobrania kolejnej strony wyników.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny sesji.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Rozmiar strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionInvoicesResponse"
                },
                "example": {"invoices":[{"ordinalNumber":2,"referenceNumber":"20250626-EE-2F20AD2000-242386DF86-52","invoiceHash":"mkht+3m5trnfxlTYhq3QFn74LkEO69MFNlsMAkCDSPA=","receiveDate":"2025-07-11T12:23:56.0154302+00:00","status":{"code":404,"description":"Duplikat faktury","details":["Duplikat faktury. Faktura o numerze KSeF: 5265877635-20250626-010080DD2B5E-26 została już prawidłowo przesłana do systemu w sesji: 20250626-SO-2F14610000-242991F8C9-B4"]}}],"totalCount":1}
              }
            }
          },
          "400": {
            "description": "| ExceptionCode       | ExceptionDescription                                | Details                                                     | \r\n|---------------------|-----------------------------------------------------|-------------------------------------------------------------|\r\n| 21173               | Brak sesji o wskazanym numerze referencyjnym.       | Sesja o numerze referencyjnym {referenceNumber} nie została znaleziona.   |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/sessions/{referenceNumber}/invoices/ksef/{ksefNumber}/upo": {
      "get": {
        "tags": [
          "Status wysyłki i UPO"
        ],
        "summary": "Pobranie UPO faktury z sesji na podstawie numeru KSeF",
        "description": "Zwraca UPO faktury przesłanego w sesji na podstawie jego numeru KSeF.",
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny sesji.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ksefNumber",
            "in": "path",
            "description": "Numer KSeF faktury.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "| ExceptionCode       | ExceptionDescription                                | Details                                                                                                        | \r\n|---------------------|-----------------------------------------------------|----------------------------------------------------------------------------------------------------------------|\r\n| 21178               | Nie znaleziono UPO dla podanych kryteriów.          | UPO o numerze KSeF {ksefNumber} i numerze referencyjnym sesji {referenceNumber} nie zostało znalezione.  |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/sessions/{referenceNumber}/invoices/{invoiceReferenceNumber}/upo": {
      "get": {
        "tags": [
          "Status wysyłki i UPO"
        ],
        "summary": "Pobranie UPO faktury z sesji na podstawie numeru referencyjnego faktury",
        "description": "Zwraca UPO faktury przesłanego w sesji na podstawie jego numeru KSeF.",
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny sesji.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceReferenceNumber",
            "in": "path",
            "description": "Numer referencyjny faktury.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sessions/{referenceNumber}/upo/{upoReferenceNumber}": {
      "get": {
        "tags": [
          "Status wysyłki i UPO"
        ],
        "summary": "Pobranie UPO dla sesji",
        "description": "Zwraca XML zawierający zbiorcze UPO dla sesji.",
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny sesji.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upoReferenceNumber",
            "in": "path",
            "description": "Numer referencyjny UPO.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "| ExceptionCode       | ExceptionDescription                                | Details                                                                                                        | \r\n|---------------------|-----------------------------------------------------|----------------------------------------------------------------------------------------------------------------|\r\n| 21173               | Brak sesji o wskazanym numerze referencyjnym.       | Sesja o numerze referencyjnym {referenceNumber} nie została znaleziona.                                        |\r\n| 21178               | Nie znaleziono UPO dla podanych kryteriów.          | UPO o numerze referencyjnym {referenceNumber} dla sesji {referenceNumber} nie zostało znalezione.        |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/tokens": {
      "post": {
        "tags": [
          "Tokeny KSeF"
        ],
        "summary": "Wygenerowanie nowego tokena",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GenerateTokenRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tokeny KSeF"
        ],
        "summary": "Pobranie listy wygenerowanych tokenów",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status tokenów do zwrócenia. W przypadku braku parametru zwracane są wszystkie tokeny. Parametr można przekazać wielokrotnie.\r\n| Wartość | Opis |\r\n| --- | --- |\r\n| Pending | Token został utworzony ale jest jeszcze w trakcie aktywacji i nadawania uprawnień. Nie może być jeszcze wykorzystywany do uwierzytelniania. |\r\n| Active | Token jest aktywny i może być wykorzystywany do uwierzytelniania. |\r\n| Revoking | Token jest w trakcie unieważniania. Nie może już być wykorzystywany do uwierzytelniania. |\r\n| Revoked | Token został unieważniony i nie może być wykorzystywany do uwierzytelniania. |\r\n| Failed | Nie udało się aktywować tokena. Należy wygenerować nowy token, obecny nie może być wykorzystywany do uwierzytelniania. |\r\n",
            "schema": {
              "enum": [
                "Pending",
                "Active",
                "Revoking",
                "Revoked",
                "Failed"
              ],
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AuthenticationTokenStatus"
              },
              "description": "| Wartość | Opis |\r\n| --- | --- |\r\n| Pending | Token został utworzony ale jest jeszcze w trakcie aktywacji i nadawania uprawnień. Nie może być jeszcze wykorzystywany do uwierzytelniania. |\r\n| Active | Token jest aktywny i może być wykorzystywany do uwierzytelniania. |\r\n| Revoking | Token jest w trakcie unieważniania. Nie może już być wykorzystywany do uwierzytelniania. |\r\n| Revoked | Token został unieważniony i nie może być wykorzystywany do uwierzytelniania. |\r\n| Failed | Nie udało się aktywować tokena. Należy wygenerować nowy token, obecny nie może być wykorzystywany do uwierzytelniania. |\r\n"
            }
          },
          {
            "name": "x-continuation-token",
            "in": "header",
            "description": "Token służący do pobrania kolejnej strony wyników.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Rozmiar strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTokensResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/tokens/{referenceNumber}": {
      "get": {
        "tags": [
          "Tokeny KSeF"
        ],
        "summary": "Pobranie statusu tokena",
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny tokena.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationToken"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tokeny KSeF"
        ],
        "summary": "Unieważnienie tokena",
        "description": "Unieważniony token nie pozwoli już na uwierzytelnienie się za jego pomocą. Unieważnienie nie może zostać cofnięte.",
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny tokena do unieważeniania.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/challenge": {
      "post": {
        "tags": [
          "Uzyskiwanie dostępu"
        ],
        "summary": "Inicjalizacja uwierzytelnienia",
        "description": "Generuje unikalny challenge wymagany w kolejnym kroku operacji uwierzytelnienia.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationChallengeResponse"
                },
                "example": {"challenge":"20250514-CR-226FB7B000-3ACF9BE4C0-10","timestamp":"2025-07-11T12:23:56.0154302+00:00"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/xades-signature": {
      "post": {
        "tags": [
          "Uzyskiwanie dostępu"
        ],
        "summary": "Uwierzytelnienie z wykorzystaniem podpisu XAdES",
        "description": "Rozpoczyna operację uwierzytelniania za pomocą dokumentu XML podpisanego podpisem elektroniczny XAdES.\r\n\r\n> Więcej informacji:\r\n> - [Przygotowanie dokumentu XML](https://github.com/CIRFMF/ksef-docs/blob/main/uwierzytelnianie.md#1-przygotowanie-dokumentu-xml-authtokenrequest)\r\n> - [Podpis dokumentu XML](https://github.com/CIRFMF/ksef-docs/blob/main/uwierzytelnianie.md#2-podpisanie-dokumentu-xades)\r\n> - [Schemat XSD](/docs/v2/schemas/authv2.xsd)",
        "parameters": [
          {
            "name": "verifyCertificateChain",
            "in": "query",
            "description": "Wymuszenie weryfikacji zaufania łańcucha certyfikatu wraz ze sprawdzeniem statusu certyfikatu (OCSP/CRL) na środowiskach które umożliwiają wykorzystanie samodzielnie wygenerowanych certyfikatów.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "string"
              },
              "example": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<AuthTokenRequest xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns=\"http://ksef.mf.gov.pl/auth/token/2.0\">\r\n    <Challenge>20250625-CR-20F5EE4000-DA48AE4124-46</Challenge>\r\n    <ContextIdentifier>\r\n        <Type>nip</Type>\r\n        <Value>5265877635</Value>\r\n    </ContextIdentifier>\r\n    <SubjectIdentifierType>certificateSubject</SubjectIdentifierType>\r\n    <ds:Signature xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" Id=\"Signature-9707709\">\r\n        <!-- Tu powinien być podpis XAdES -->\r\n    </ds:Signature>\r\n</AuthTokenRequest>"
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationInitResponse"
                },
                "example": {"referenceNumber":"20250514-AU-2DFC46C000-3AC6D5877F-D4","authenticationToken":{"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbi10eXBlIjoiT3BlcmF0aW9uVG9rZW4iLCJvcGVyYXRpb24tcmVmZXJlbmNlLW51bWJlciI6IjIwMjUwNTE0LUFVLTJERkM0NkMwMDAtM0FDNkQ1ODc3Ri1ENCIsImV4cCI6MTc0NzIzMTcxOSwiaWF0IjoxNzQ3MjI5MDE5LCJpc3MiOiJrc2VmLWFwaS10aSIsImF1ZCI6ImtzZWYtYXBpLXRpIn0.rtRcV2mR9SiuJwpQaQHsbAXvvVsdNKG4DJsdiJctIeU","validUntil":"2025-07-11T12:23:56.0154302+00:00"}}
              }
            }
          },
          "400": {
            "description": " | ExceptionCode       | ExceptionDescription                                | Details                                                     | \r\n|---------------------|-----------------------------------------------------|-------------------------------------------------------------|\r\n| 21217               | Nieprawidłowe kodowanie znaków.                     |                                                             |\r\n| 21001               | Nieczytelna treść.                                  |                                                             |\r\n| 21111               | Nieprawidłowe wyzwanie autoryzacyjne.               |                                                             |\r\n| 21401               | Dokument nie jest zgodny ze schemą (xsd).           | {treść błędu walidacji}                                     |\r\n| 21115               | Nieprawidłowy certyfikat.                           |                                                             |\r\n| 21406               | Konflikt podpisu i typu uwierzytelnienia.           |                                                             |\r\n| 9101                | Nieprawidłowy dokument.                             |                                                             |\r\n| 9102                | Brak podpisu.                                       |                                                             |\r\n| 9103                | Przekroczona liczba dozwolonych podpisów.           |                                                             |\r\n| 9105                | Nieprawidłowa treść podpisu.                        |                                                             |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/auth/ksef-token": {
      "post": {
        "tags": [
          "Uzyskiwanie dostępu"
        ],
        "summary": "Uwierzytelnienie z wykorzystaniem tokena KSeF",
        "description": "Rozpoczyna operację uwierzytelniania z wykorzystaniem wcześniej wygenerowanego tokena KSeF.\r\n\r\nToken KSeF wraz z timestampem ze wcześniej wygenerowanego challenge'a (w formacie ```token|timestamp```) powinien zostać zaszyfrowany dedykowanym do tego celu kluczem publicznym.\r\n- Timestamp powinien zostać przekazany jako **liczba milisekund od 1 stycznia 1970 roku (Unix timestamp)**.\r\n- Algorytm szyfrowania: **RSA-OAEP (z użyciem SHA-256 jako funkcji skrótu)**.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "challenge",
                  "contextIdentifier",
                  "encryptedToken"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InitTokenAuthenticationRequest"
                  }
                ]
              },
              "example": {"challenge":"20250625-CR-2FDC223000-C2BFC98A9C-4E","contextIdentifier":{"type":"Nip","value":"5265877635"},"encryptedToken":"..."}
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationInitResponse"
                },
                "example": {"referenceNumber":"20250514-AU-2DFC46C000-3AC6D5877F-D4","authenticationToken":{"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbi10eXBlIjoiT3BlcmF0aW9uVG9rZW4iLCJvcGVyYXRpb24tcmVmZXJlbmNlLW51bWJlciI6IjIwMjUwNTE0LUFVLTJERkM0NkMwMDAtM0FDNkQ1ODc3Ri1ENCIsImV4cCI6MTc0NzIzMTcxOSwiaWF0IjoxNzQ3MjI5MDE5LCJpc3MiOiJrc2VmLWFwaS10aSIsImF1ZCI6ImtzZWYtYXBpLXRpIn0.rtRcV2mR9SiuJwpQaQHsbAXvvVsdNKG4DJsdiJctIeU","validUntil":"2025-07-11T12:23:56.0154302+00:00"}}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/{referenceNumber}": {
      "get": {
        "tags": [
          "Uzyskiwanie dostępu"
        ],
        "summary": "Pobranie statusu uwierzytelniania",
        "description": "Sprawdza bieżący status operacji uwierzytelniania dla podanego tokena.\r\n\r\nSposób uwierzytelnienia: `AuthenticationToken` otrzymany przy rozpoczęciu operacji uwierzytelniania.",
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny tokena otrzymanego przy inicjalizacji operacji uwierzytelniania.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationOperationStatusResponse"
                },
                "examples": {
                  "Kod 100 | Uwierzytelnianie w toku": {
                    "value": {"isCurrent":false,"startDate":"0001-01-01T00:00:00+00:00","authenticationMethod":"Token","status":{"code":100,"description":"Uwierzytelnianie w toku"}}
                  },
                  "Kod 200 | Uwierzytelnianie zakończone sukcesem": {
                    "value": {"isCurrent":false,"startDate":"0001-01-01T00:00:00+00:00","authenticationMethod":"Token","status":{"code":200,"description":"Uwierzytelnianie zakończone sukcesem"}}
                  },
                  "Kod 400 | Uwierzytelnianie zakończone niepowodzeniem | Nieważny certyfikat": {
                    "value": {"isCurrent":false,"startDate":"0001-01-01T00:00:00+00:00","authenticationMethod":"Token","status":{"code":400,"description":"Uwierzytelnianie zakończone niepowodzeniem","details":["Nieważny certyfikat."]}}
                  },
                  "Kod 400 | Uwierzytelnianie zakończone niepowodzeniem | Błąd weryfikacji łańcucha certyfikatów": {
                    "value": {"isCurrent":false,"startDate":"0001-01-01T00:00:00+00:00","authenticationMethod":"Token","status":{"code":400,"description":"Uwierzytelnianie zakończone niepowodzeniem","details":["Błąd weryfikacji łańcucha certyfikatów."]}}
                  },
                  "Kod 400 | Uwierzytelnianie zakończone niepowodzeniem | Niezaufany łańcuch certyfikatów": {
                    "value": {"isCurrent":false,"startDate":"0001-01-01T00:00:00+00:00","authenticationMethod":"Token","status":{"code":400,"description":"Uwierzytelnianie zakończone niepowodzeniem","details":["Niezaufany łańcuch certyfikatów."]}}
                  },
                  "Kod 400 | Uwierzytelnianie zakończone niepowodzeniem | Certyfikat odwołany": {
                    "value": {"isCurrent":false,"startDate":"0001-01-01T00:00:00+00:00","authenticationMethod":"Token","status":{"code":400,"description":"Uwierzytelnianie zakończone niepowodzeniem","details":["Certyfikat odwołany."]}}
                  },
                  "Kod 400 | Uwierzytelnianie zakończone niepowodzeniem | Niepoprawny certyfikat": {
                    "value": {"isCurrent":false,"startDate":"0001-01-01T00:00:00+00:00","authenticationMethod":"Token","status":{"code":400,"description":"Uwierzytelnianie zakończone niepowodzeniem","details":["Niepoprawny certyfikat."]}}
                  },
                  "Kod 500 | Nieznany błąd": {
                    "value": {"isCurrent":false,"startDate":"0001-01-01T00:00:00+00:00","authenticationMethod":"Token","status":{"code":500,"description":"Nieznany błąd ({statusCode})"}}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/token/redeem": {
      "post": {
        "tags": [
          "Uzyskiwanie dostępu"
        ],
        "summary": "Pobranie tokenów dostępowych",
        "description": "Pobiera parę tokenów (access token i refresh token) wygenerowanych w ramach pozytywnie zakończonego procesu uwierzytelniania.\r\n**Tokeny można pobrać tylko raz.**\r\n\r\nSposób uwierzytelnienia: `AuthenticationToken` otrzymany przy rozpoczęciu operacji uwierzytelniania.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationTokensResponse"
                },
                "example": {"accessToken":{"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbi10eXBlIjoiQ29udGV4dFRva2VuIiwiY29udGV4dC1pZGVudGlmaWVyLXR5cGUiOiJOaXAiLCJjb250ZXh0LWlkZW50aWZpZXItdmFsdWUiOiIzNzU2OTc3MDQ5IiwiYXV0aGVudGljYXRpb24tbWV0aG9kIjoiUXVhbGlmaWVkU2VhbCIsInN1YmplY3QtZGV0YWlscyI6IntcIlN1YmplY3RJZGVudGlmaWVyXCI6e1wiVHlwZVwiOlwiTmlwXCIsXCJWYWx1ZVwiOlwiMzc1Njk3NzA0OVwifX0iLCJleHAiOjE3NDcyMjAxNDksImlhdCI6MTc0NzIxOTI0OSwiaXNzIjoia3NlZi1hcGktdGkiLCJhdWQiOiJrc2VmLWFwaS10aSJ9.R_3_R2PbdCk8T4WP_0XGOO1iVNu2ugNxmkDvsD0soIE","validUntil":"2025-07-11T12:23:56.0154302+00:00"},"refreshToken":{"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbi10eXBlIjoiQ29udGV4dFRva2VuIiwiY29udGV4dC1pZGVudGlmaWVyLXR5cGUiOiJOaXAiLCJjb250ZXh0LWlkZW50aWZpZXItdmFsdWUiOiIzNzU2OTc3MDQ5IiwiYXV0aGVudGljYXRpb24tbWV0aG9kIjoiUXVhbGlmaWVkU2VhbCIsInN1YmplY3QtZGV0YWlscyI6IntcIlN1YmplY3RJZGVudGlmaWVyXCI6e1wiVHlwZVwiOlwiTmlwXCIsXCJWYWx1ZVwiOlwiMzc1Njk3NzA0OVwifX0iLCJleHAiOjE3NDcyMjAxNDksImlhdCI6MTc0NzIxOTI0OSwiaXNzIjoia3NlZi1hcGktdGkiLCJhdWQiOiJrc2VmLWFwaS10aSJ9.R_3_R2PbdCk8T4WP_0XGOO1iVNu2ugNxmkDvsD0soIE","validUntil":"2025-07-11T12:23:56.0154302+00:00"}}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/token/refresh": {
      "post": {
        "tags": [
          "Uzyskiwanie dostępu"
        ],
        "summary": "Odświeżenie tokena dostępowego",
        "description": "Generuje nowy token dostępu na podstawie ważnego refresh tokena.\r\n\r\nSposób uwierzytelnienia: `RefreshToken`.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationTokenRefreshResponse"
                },
                "example": {"accessToken":{"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbi10eXBlIjoiQ29udGV4dFRva2VuIiwiY29udGV4dC1pZGVudGlmaWVyLXR5cGUiOiJOaXAiLCJjb250ZXh0LWlkZW50aWZpZXItdmFsdWUiOiIzNzU2OTc3MDQ5IiwiYXV0aGVudGljYXRpb24tbWV0aG9kIjoiUXVhbGlmaWVkU2VhbCIsInN1YmplY3QtZGV0YWlscyI6IntcIlN1YmplY3RJZGVudGlmaWVyXCI6e1wiVHlwZVwiOlwiTmlwXCIsXCJWYWx1ZVwiOlwiMzc1Njk3NzA0OVwifX0iLCJleHAiOjE3NDcyMjAxNDksImlhdCI6MTc0NzIxOTI0OSwiaXNzIjoia3NlZi1hcGktdGkiLCJhdWQiOiJrc2VmLWFwaS10aSJ9.R_3_R2PbdCk8T4WP_0XGOO1iVNu2ugNxmkDvsD0soIE","validUntil":"2025-07-11T12:23:56.0154302+00:00"}}
              }
            }
          },
          "400": {
            "description": "| ExceptionCode       | ExceptionDescription                                | Details                                                                     | \r\n|---------------------|-----------------------------------------------------|-----------------------------------------------------------------------------|\r\n| 21304               | Brak uwierzytelnienia.                              | Operacja uwierzytelniania o numerze referencyjnym {referenceNumber} nie została znaleziona. |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/sessions/online": {
      "post": {
        "tags": [
          "Wysyłka interaktywna"
        ],
        "summary": "Otwarcie sesji interaktywnej",
        "description": "Otwiera sesję do wysyłki pojedynczych faktur. Należy przekazać schemat wysyłanych faktur oraz informacje o kluczu używanym do szyfrowania.\r\n\r\n> Więcej informacji:\r\n> - [Otwarcie sesji interaktywnej](https://github.com/CIRFMF/ksef-docs/blob/main/sesja-interaktywna.md#1-otwarcie-sesji)\r\n> - [Klucz publiczny Ministersta Finansów](/public-keys/publicKey.pem)",
        "operationId": "onlineSession.open",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "formCode",
                  "encryption"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OpenOnlineSessionRequest"
                  }
                ]
              },
              "example": {"formCode":{"systemCode":"FA (2)","schemaVersion":"1-0E","value":"FA"},"encryption":{"encryptedSymmetricKey":"bdUVjqLj+y2q6aBUuLxxXYAMqeDuIBRTyr+hB96DaWKaGzuVHw9p+Nk9vhzgF/Q5cavK2k6eCh6SdsrWI0s9mFFj4A4UJtsyD8Dn3esLfUZ5A1juuG3q3SBi/XOC/+9W+0T/KdwdE393mbiUNyx1K/0bw31vKJL0COeJIDP7usAMDl42/H1TNvkjk+8iZ80V0qW7D+RZdz+tdiY1xV0f2mfgwJ46V0CpZ+sB9UAssRj+eVffavJ0TOg2b5JaBxE8MCAvrF6rO5K4KBjUmoy7PP7g1qIbm8xI2GO0KnfPOO5OWj8rsotRwBgu7x19Ine3qYUvuvCZlXRGGZ5NHIzWPM4O74+gNalaMgFCsmv8mMhETSU4SfAGmJr9edxPjQSbgD5i2X4eDRDMwvyaAa7CP1b2oICju+0L7Fywd2ZtUcr6El++eTVoi8HYsTArntET++gULT7XXjmb8e3O0nxrYiYsE9GMJ7HBGv3NOoJ1NTm3a7U6+c0ZJiBVLvn6xXw10LQX243xH+ehsKo6djQJKYtqcNPaXtCwM1c9RrsOx/wRXyWCtTffqLiaR0LbYvfMJAcEWceG+RaeAx4p37OiQqdJypd6LAv9/0ECWK8Bip8yyoA+0EYiAJb9YuDz2YlQX9Mx9E9FzFIAsgEQ2w723HZYWgPywLb+dlsum4lTZKQ=","initializationVector":"OmtDQdl6vkOI1GLKZSjgEg=="}}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenOnlineSessionResponse"
                },
                "example": {"referenceNumber":"20250625-SO-2C3E6C8000-B675CF5D68-07"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sessions/online/{referenceNumber}/invoices": {
      "post": {
        "tags": [
          "Wysyłka interaktywna"
        ],
        "summary": "Wysłanie faktury",
        "description": "Przyjmuje zaszyfrowaną fakturę oraz jej metadane i rozpoczyna jej przetwarzanie.\r\n\r\n> Więcej informacji:\r\n> - [Wysłanie faktury](https://github.com/CIRFMF/ksef-docs/blob/main/sesja-interaktywna.md#2-wys%C5%82anie-faktury)",
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny sesji",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dane faktury",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "invoiceHash",
                  "invoiceSize",
                  "encryptedInvoiceHash",
                  "encryptedInvoiceSize",
                  "encryptedInvoiceContent"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendInvoiceRequest"
                  }
                ]
              },
              "example": {"invoiceHash":"EbrK4cOSjW4hEpJaHU71YXSOZZmqP5++dK9nLgTzgV4=","invoiceSize":6480,"encryptedInvoiceHash":"miYb1z3Ljw5VucTZslv3Tlt+V/EK1V8Q8evD8HMQ0dc=","encryptedInvoiceSize":6496,"encryptedInvoiceContent":"...","offlineMode":false}
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendInvoiceResponse"
                },
                "example": {"referenceNumber":"20250625-EE-319D7EE000-B67F415CDC-2C"}
              }
            }
          },
          "400": {
            "description": "| ExceptionCode       | ExceptionDescription                                | Details                                                                    | \r\n|---------------------|-----------------------------------------------------|----------------------------------------------------------------------------|\r\n| 21173               | Brak sesji o wskazanym numerze referencyjnym.       | Sesja o numerze referencyjnym {referenceNumber} nie została odnaleziona.   |\r\n| 21154               | Sesja interaktywna zakończona.                      | Sesja o numerze referencyjnym {referenceNumber} jest zamknięta.            |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/sessions/online/{referenceNumber}/close": {
      "post": {
        "tags": [
          "Wysyłka interaktywna"
        ],
        "summary": "Zamknięcie sesji interaktywnej",
        "description": "Zamyka sesję interaktywną i rozpoczyna generowanie zbiorczego UPO dla sesji.",
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny sesji",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "| ExceptionCode       | ExceptionDescription                                | Details                                                                    | \r\n|---------------------|-----------------------------------------------------|----------------------------------------------------------------------------|\r\n| 21173               | Brak sesji o wskazanym numerze referencyjnym.       | Sesja o numerze referencyjnym {referenceNumber} nie została odnaleziona.   |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/sessions/batch": {
      "post": {
        "tags": [
          "Wysyłka wsadowa"
        ],
        "summary": "Otwarcie sesji wsadowej",
        "description": "Otwiera sesję do wysyłki wsadowej faktur. Należy przekazać schemat wysyłanych faktur, informacje o paczce faktur oraz informacje o kluczu używanym do szyfrowania.\r\n\r\n> Więcej informacji:\r\n> - [Przygotwanie paczki faktur](https://github.com/CIRFMF/ksef-docs/blob/main/sesja-wsadowa.md)\r\n> - [Klucz publiczny Ministersta Finansów](/public-keys/publicKey.pem)",
        "operationId": "batch.open",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "formCode",
                  "batchFile",
                  "encryption"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OpenBatchSessionRequest"
                  }
                ]
              },
              "example": {"formCode":{"systemCode":"FA (2)","schemaVersion":"1-0E","value":"FA"},"batchFile":{"fileSize":16037,"fileHash":"WO86CC+1Lef11wEosItld/NPwxGN8tobOMLqk9PQjgs=","fileParts":[{"ordinalNumber":1,"fileName":"92cca5be-7f37-4d36-98bb-1f5369841038.zip.aes","fileSize":16048,"fileHash":"23ZyDAN0H/+yhC/En2xbNfF0tajAWSfejDaXD7fc2AE="}]},"encryption":{"encryptedSymmetricKey":"bYqmPAglF01AxZim4oNa+1NerhZYfFgLMnvksBprUur1aesQ0Y5jsmOIfCrozfMkF2tjdO+uOsBg4FPlDgjChwN2/tz2Hqwtxq3RkTr1SjY4x8jxJFpPedcS7EI+XO8C+i9mLj7TFx9p/bg07yM9vHtMAk5b88Ay9Qc3+T5Ch1DM2ClR3sVu2DqdlKzmbINY+rhfGtXn58Qo0XRyESGgc6M0iTZVBRPuPXLnD8a1KpOneCpNzLwxgT6Ei3ivLOpPWT53PxkRTaQ8puj6CIiCKo4FHQzHuI/NmrAhYU7TkNm2kymP/OxBgWdg3XB74tqNFfT8RZN1bZXuPhBidDOqa+xsqY3E871FSDmQwZf58HmoNl31XNvpnryiRGfnAISt+m+ELqgksAresVu6E9poUL1yiff+IOHSZABoYpNiqwnbT8qyW1uk8lKLyFVFu+kOsbzBk1OWWHqSkNFDaznDa2MKjHonOXI0uyKaKWvoBFC4dWN1PVumfpSSFAeYgNpAyVrZdcVOuiliEWepTDjGzJoOafTvwr5za2S6B5bPECDpX7JXazV7Olkq7ezG0w8y3olx+0C+NHoCk8B5/cm4gtVHTgKjiLSGpKJVOJABLXFkOyIOjbQsVe4ryX0Qy+SfL7JIQvTWvM5xkCoOMbzLdMo9tNo5qE34sguFI+lIevY=","initializationVector":"jWpJLNBHJ5pQEGCBglmIAw=="},"offlineMode":false}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenBatchSessionResponse"
                },
                "example": {"referenceNumber":"20250626-SB-213D593000-4DE10D80A5-E9","partUploadRequests":[{"ordinalNumber":1,"method":"PUT","url":"https://ksef-api-storage/storage/00/20250626-sb-213d593000-4de10d80a5-e9/batch-parts/92cca5be-7f37-4d36-98bb-1f5369841038.zip.aes?skoid=1ad7cfe8-2cb2-406b-b96c-6eefb55794db&sktid=647754c7-3974-4442-a425-c61341b61c69&skt=2025-06-26T09%3A40%3A54Z&ske=2025-06-26T10%3A10%3A54Z&sks=b&skv=2025-01-05&sv=2025-01-05&se=2025-06-26T10%3A10%3A54Z&sr=b&sp=w&sig=8mKZEU8Reuz%2Fn7wHi4T%2FY8BzLeD5l8bR2xJsBxIgDEY%3D","headers":{"x-ms-blob-type":"BlockBlob"}}]}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sessions/batch/{referenceNumber}/close": {
      "post": {
        "tags": [
          "Wysyłka wsadowa"
        ],
        "summary": "Zamknięcie sesji wsadowej",
        "description": "Zamyka sesję wsadową, rozpoczyna procesowanie paczki faktur i generowanie UPO dla prawidłowych faktur oraz zbiorczego UPO dla sesji.",
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "path",
            "description": "Numer referencyjny sesji",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "| ExceptionCode       | ExceptionDescription                                | Details                                                                   | \r\n|---------------------|-----------------------------------------------------|---------------------------------------------------------------------------|\r\n| 21173               | Brak sesji o wskazanym numerze referencyjnym.       | Sesja o numerze referencyjnym {referenceNumber} nie została znaleziona.   |\r\n| 21205               | Pakiet nie może być pusty.                          | Nie przesłano zadeklarowanych części pliku.                               |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            },
            "x-summary": "Bad Request"
          }
        }
      }
    },
    "/api/v2/permissions/query/persons/grants": {
      "post": {
        "tags": [
          "Wyszukiwanie nadanych uprawnień"
        ],
        "summary": "Pobranie listy uprawnień do pracy w KSeF nadanych osobom fizycznym lub podmiotom",
        "description": "Zwraca listę uprawnień do pracy w KSeF nadanych osobom fizycznym lub podmiotom.\r\n\r\n> Więcej informacji:\r\n> - [Pobieranie listy uprawnień](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#pobranie-listy-uprawnie%C5%84-do-pracy-w-ksef-nadanych-osobom-fizycznym-lub-podmiotom)",
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "description": "Numer strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Rozmiar strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "queryType"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PersonPermissionsQueryRequest"
                  }
                ]
              },
              "example": {"authorIdentifier":{"type":"Nip","value":"7762811692"},"permissionTypes":["CredentialsManage","CredentialsRead","InvoiceWrite"],"permissionState":"Active","queryType":"PermissionsInCurrentContext"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryPersonPermissionsResponse"
                },
                "example": {"permissions":[{"id":"0c9a72e8-f344-457f-9c16-7c640eb60242","authorizedIdentifier":"7762811692","authorizedIdentifierType":"Nip","targetIdentifier":"9786214922","targetIdentifierType":"Nip","authorIdentifier":"15062788702","authorIdentifierType":"Pesel","permissionScope":"InvoiceWrite","description":"Uprawnienie nadane pośrednio","permissionState":"Active","startDate":"2025-06-22T10:41:11+00:00","canDelegate":false}],"page":1,"pageSize":10}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/query/subunits/grants": {
      "post": {
        "tags": [
          "Wyszukiwanie nadanych uprawnień"
        ],
        "summary": "Pobranie listy uprawnień administratorów jednostek i podmiotów podrzędnych",
        "description": "Zwraca listę uprawnień administratorów jednostek i podmiotów podrzędnych.\r\n\r\n> Więcej informacji:\r\n> - [Pobieranie listy uprawnień](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#pobranie-listy-uprawnie%C5%84-administrator%C3%B3w-jednostek-i-podmiot%C3%B3w-podrz%C4%99dnych)",
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "description": "Numer strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Rozmiar strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubunitPermissionsQueryRequest"
                  }
                ]
              },
              "example": {"subunitIdentifier":{"type":"InternalId","value":"7762811692-12345"}}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuerySubunitPermissionsResponse"
                },
                "example": {"permissions":[{"id":"0c9a72e8-f344-457f-9c16-7c640eb60242","authorizedIdentifier":"CEB3643BAC2C111ADDE971BDA5A80163441867D65389FC0BC0DFF8B4C1CD4E59","authorizedIdentifierType":"Fingerprint","subunitIdentifier":"7762811692-12345","subunitIdentifierType":"InternalId","authorIdentifier":"15062788702","authorIdentifierType":"Pesel","permissionScope":"CredentialsManage","description":"administrator jednostki podrzędnej","startDate":"2025-06-22T10:41:11+00:00"}],"page":1,"pageSize":10}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/query/entities/roles": {
      "get": {
        "tags": [
          "Wyszukiwanie nadanych uprawnień"
        ],
        "summary": "Pobranie listy ról podmiotu",
        "description": "Zwraca listę ról podmiotu.\r\n\r\n> Więcej informacji:\r\n> - [Pobieranie listy ról](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#pobranie-listy-r%C3%B3l-podmiotu)",
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "description": "Numer strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Rozmiar strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryEntityRolesResponse"
                },
                "example": {"roles":[{"role":"EnforcementAuthority","description":"Organ egzekucyjny","startDate":"2025-06-22T10:41:11+00:00"}],"page":1,"pageSize":10}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/query/subordinate-entities/roles": {
      "post": {
        "tags": [
          "Wyszukiwanie nadanych uprawnień"
        ],
        "summary": "Pobranie listy podmiotów podrzędnych",
        "description": "Zwraca liste podmiotów podrzędnych.\r\n\r\n> Więcej informacji:\r\n> - [Pobieranie listy podmiotów podrzędnych](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#pobranie-listy-podmiot%C3%B3w-podrz%C4%99dnych)",
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "description": "Numer strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Rozmiar strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubordinateEntityRolesQueryRequest"
                  }
                ]
              },
              "example": {"subordinateEntityIdentifier":{"type":"Nip","value":"7762811692"}}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuerySubordinateEntityRolesResponse"
                },
                "example": {"roles":[{"subordinateEntityIdentifier":"7762811692","subordinateEntityIdentifierType":"Nip","role":"VatGroupSubUnit","description":"Członek grupy VAT","startDate":"2025-06-22T10:41:11+00:00"}],"page":1,"pageSize":10}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/query/authorizations/grants": {
      "post": {
        "tags": [
          "Wyszukiwanie nadanych uprawnień"
        ],
        "summary": "Pobranie listy uprawnień podmiotowych do obsługi faktur",
        "description": "Zwraca listę uprawnień podmiotowych do obsługi faktur.\r\n\r\n> Więcej informacji:\r\n> - [Pobieranie listy uprawnień](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#pobranie-listy-uprawnie%C5%84-podmiotowych-do-obs%C5%82ugi-faktur)",
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "description": "Numer strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Rozmiar strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "queryType"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EntityAuthorizationPermissionsQueryRequest"
                  }
                ]
              },
              "example": {"authorizedIdentifier":{"type":"Nip","value":"7762811692"},"queryType":"Granted","permissionTypes":["SelfInvoicing","TaxRepresentative","RRInvoicing"]}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryEntityAuthorizationPermissionsResponse"
                },
                "example": {"authorizationGrants":[{"id":"0c9a72e8-f344-457f-9c16-7c640eb60242","authorIdentifier":"15062788702","authorIdentifierType":"Pesel","authorizedEntityIdentifier":"7762811692","authorizedEntityIdentifierType":"Nip","authorizingEntityIdentifier":"1134256681","authorizingEntityIdentifierType":"Nip","authorizationScope":"SelfInvoicing","description":"Uprawnienie podmiotowe do samofakturowania","startDate":"2025-06-22T10:41:11+00:00"}],"page":1,"pageSize":10}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/permissions/query/eu-entities/grants": {
      "post": {
        "tags": [
          "Wyszukiwanie nadanych uprawnień"
        ],
        "summary": "Pobranie listy uprawnień administratorów lub reprezentantów podmiotów unijnych uprawnionych do samofakturowania",
        "description": "Zwraca listę uprawnień administratorów lub reprezentantów podmiotów unijnych uprawnionych do samofakturowania.\r\n\r\n> Więcej informacji:\r\n> - [Pobieranie listy uprawnień](https://github.com/CIRFMF/ksef-docs/blob/main/uprawnienia.md#pobranie-listy-uprawnie%C5%84-administrator%C3%B3w-lub-reprezentant%C3%B3w-podmiot%C3%B3w-unijnych-uprawnionych-do-samofakturowania)",
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "description": "Numer strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Rozmiar strony wyników.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EuEntityPermissionsQueryRequest"
                  }
                ]
              },
              "example": {"vatUeIdentifier":"DE123456789012","permissionTypes":["VatUeManage","Introspection"]}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryEuEntityPermissionsResponse"
                },
                "example": {"permissions":[{"id":"0c9a72e8-f344-457f-9c16-7c640eb60242","authorIdentifier":"15062788702","authorIdentifierType":"Pesel","vatUeIdentifier":"DE123456789012","euEntityName":"Podmiot unijny","authorizedFingerprintIdentifier":"CEB3643BAC2C111ADDE971BDA5A80163441867D65389FC0BC0DFF8B4C1CD4E59","permissionScope":"VatUeManage","description":"Administrator podmiotu unijnego","startDate":"2025-06-22T10:41:11+00:00"}],"page":1,"pageSize":10}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AllowedIps": {
        "type": "object",
        "properties": {
          "ipAddress": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lista adresów IPv4 w notacji dziesiętnej kropkowanej, np. `192.168.0.10`.",
            "nullable": true
          },
          "ipRange": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lista adresów IPv4 podana w formie zakresu początek–koniec, oddzielonego pojedynczym myślnikiem, np. `10.0.0.1–10.0.0.254`.",
            "nullable": true
          },
          "ipMask": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lista adresów IPv4 w notacji CIDR z maską 8 / 16 / 24 / 32, np. `172.16.0.0/16`.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmountType": {
        "enum": [
          "Brutto",
          "Netto",
          "Vat"
        ],
        "type": "string"
      },
      "AsyncInvoicesQueryStatus": {
        "required": [
          "operationReferenceNumber",
          "status"
        ],
        "type": "object",
        "properties": {
          "operationReferenceNumber": {
            "type": "string",
            "description": "Unikalny identyfikator operacji, nadany podczas inicjalizacji zapytania."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusInfo"
              }
            ],
            "description": "Informacje o aktualnym statusie przetwarzania zapytania."
          },
          "packageParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicePackagePart"
            },
            "description": "Lista plików dostępnych do pobrania.\r\nWypełniana tylko, gdy wynik zapytania jest gotowy.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticationChallengeResponse": {
        "required": [
          "challenge",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "challenge": {
            "type": "string",
            "description": "Unikalny challenge."
          },
          "timestamp": {
            "type": "string",
            "description": "Czas wygenerowania challenge-a.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AuthenticationInitResponse": {
        "required": [
          "authenticationToken",
          "referenceNumber"
        ],
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "Numer referencyjny operacji uwierzytelnienia."
          },
          "authenticationToken": {
            "required": [
              "token",
              "validUntil"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/TokenInfo"
              }
            ],
            "description": "Token operacji uwierzytelnienia."
          }
        },
        "additionalProperties": false
      },
      "AuthenticationListResponse": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Token służący do pobrania kolejnej strony wyników. Jeśli jest pusty, to nie ma kolejnych stron.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthenticationOperationStatusResponse"
            },
            "description": "Lista sesji uwierzytelniania."
          }
        },
        "additionalProperties": false
      },
      "AuthenticationMethod": {
        "enum": [
          "Token",
          "TrustedProfile",
          "InternalCertificate",
          "QualifiedSignature",
          "QualifiedSeal",
          "PersonalSignature"
        ],
        "type": "string",
        "description": "Metoda uwierzytelnienia.\r\n| Wartość | Opis |\r\n| --- | --- |\r\n| Token | Token KSeF. |\r\n| TrustedProfile | Profil Zaufany. |\r\n| InternalCertificate | Certyfikat KSeF. |\r\n| QualifiedSignature | Podpis kwalifikowany. |\r\n| QualifiedSeal | Pieczęć kwalifikowana. |\r\n| PersonalSignature | Podpis osobisty. |\r\n"
      },
      "AuthenticationOperationStatusResponse": {
        "required": [
          "authenticationMethod",
          "referenceNumber",
          "startDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "Numer referencyjny operacji uwierzytelnienia."
          },
          "isCurrent": {
            "type": "boolean",
            "description": "Czy sesja jest powiązana z aktualnie używanym tokenem.",
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "description": "Data rozpoczęcia operacji uwierzytelnienia.",
            "format": "date-time"
          },
          "authenticationMethod": {
            "enum": [
              "Token",
              "TrustedProfile",
              "InternalCertificate",
              "QualifiedSignature",
              "QualifiedSeal",
              "PersonalSignature"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/AuthenticationMethod"
              }
            ],
            "description": "Użyta metoda uwierzytelnienia.\r\n| Wartość | Opis |\r\n| --- | --- |\r\n| Token | Token KSeF. |\r\n| TrustedProfile | Profil Zaufany. |\r\n| InternalCertificate | Certyfikat KSeF. |\r\n| QualifiedSignature | Podpis kwalifikowany. |\r\n| QualifiedSeal | Pieczęć kwalifikowana. |\r\n| PersonalSignature | Podpis osobisty. |\r\n"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusInfo"
              }
            ],
            "description": "Informacje o aktualnym statusie.\r\n| Code | Description | Details |\r\n| --- | --- | --- |\r\n| 100 | Uwierzytelnianie w toku | - |\r\n| 200 | Uwierzytelnianie zakończone sukcesem | - |\r\n| 400 | Uwierzytelnianie zakończone niepowodzeniem | Nieważny certyfikat |\r\n| 400 | Uwierzytelnianie zakończone niepowodzeniem | Błąd weryfikacji łańcucha certyfikatów |\r\n| 400 | Uwierzytelnianie zakończone niepowodzeniem | Niezaufany łańcuch certyfikatów |\r\n| 400 | Uwierzytelnianie zakończone niepowodzeniem | Certyfikat odwołany |\r\n| 400 | Uwierzytelnianie zakończone niepowodzeniem | Niepoprawny certyfikat |\r\n| 401 | Uwierzytelnienie unieważnione | Uwierzytelnienie i powiązane refresh tokeny zostały unieważnione przez użytkownika |\r\n| 500 | Nieznany błąd | - |"
          },
          "isTokenRedeemed": {
            "type": "boolean",
            "description": "Czy został już wydany refresh token powiązany z danym uwierzytelnieniem.",
            "nullable": true
          },
          "lastTokenRefreshDate": {
            "type": "string",
            "description": "Data ostatniego odświeżenia tokena.",
            "format": "date-time",
            "nullable": true
          },
          "refreshTokenValidUntil": {
            "type": "string",
            "description": "Termin ważności refresh tokena (o ile nie zostanie wcześniej unieważniony).",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticationToken": {
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "Numer referencyjny tokena.",
            "nullable": true
          },
          "authorIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SubjectIdentifier"
              }
            ],
            "description": "Identyfikator osoby która wygenerowała token.",
            "nullable": true
          },
          "contextIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/ContextIdentifier"
              }
            ],
            "description": "Identyfikator kontekstu, w którym został wygenerowany token i do którego daje dostęp.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Opis tokena.",
            "nullable": true
          },
          "requestedPermissions": {
            "enum": [
              "InvoiceRead",
              "InvoiceWrite",
              "CredentialsRead",
              "CredentialsManage"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPermissionType"
            },
            "description": "Uprawnienia przypisane tokenowi.",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "description": "Data i czas utworzenia tokena.",
            "format": "date-time"
          },
          "status": {
            "enum": [
              "Pending",
              "Active",
              "Revoking",
              "Revoked",
              "Failed"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/AuthenticationTokenStatus"
              }
            ],
            "description": "Status tokena.\r\n| Wartość | Opis |\r\n| --- | --- |\r\n| Pending | Token został utworzony ale jest jeszcze w trakcie aktywacji i nadawania uprawnień. Nie może być jeszcze wykorzystywany do uwierzytelniania. |\r\n| Active | Token jest aktywny i może być wykorzystywany do uwierzytelniania. |\r\n| Revoking | Token jest w trakcie unieważniania. Nie może już być wykorzystywany do uwierzytelniania. |\r\n| Revoked | Token został unieważniony i nie może być wykorzystywany do uwierzytelniania. |\r\n| Failed | Nie udało się aktywować tokena. Należy wygenerować nowy token, obecny nie może być wykorzystywany do uwierzytelniania. |\r\n"
          }
        },
        "additionalProperties": false
      },
      "AuthenticationTokenRefreshResponse": {
        "required": [
          "accessToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "required": [
              "token",
              "validUntil"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/TokenInfo"
              }
            ],
            "description": "Token dostępu, którego należy używać w wywołaniach chronionych zasobów API."
          }
        },
        "additionalProperties": false
      },
      "AuthenticationTokenStatus": {
        "enum": [
          "Pending",
          "Active",
          "Revoking",
          "Revoked",
          "Failed"
        ],
        "type": "string",
        "description": "| Wartość | Opis |\r\n| --- | --- |\r\n| Pending | Token został utworzony ale jest jeszcze w trakcie aktywacji i nadawania uprawnień. Nie może być jeszcze wykorzystywany do uwierzytelniania. |\r\n| Active | Token jest aktywny i może być wykorzystywany do uwierzytelniania. |\r\n| Revoking | Token jest w trakcie unieważniania. Nie może już być wykorzystywany do uwierzytelniania. |\r\n| Revoked | Token został unieważniony i nie może być wykorzystywany do uwierzytelniania. |\r\n| Failed | Nie udało się aktywować tokena. Należy wygenerować nowy token, obecny nie może być wykorzystywany do uwierzytelniania. |\r\n"
      },
      "AuthenticationTokensResponse": {
        "required": [
          "accessToken",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "required": [
              "token",
              "validUntil"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/TokenInfo"
              }
            ],
            "description": "Token dostępu."
          },
          "refreshToken": {
            "required": [
              "token",
              "validUntil"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/TokenInfo"
              }
            ],
            "description": "Token umożliwiający odświeżenie tokenu dostępu.\r\n> Więcej informacji:\r\n> - [Odświeżanie tokena](https://github.com/CIRFMF/ksef-docs/blob/main/uwierzytelnianie.md#od%C5%9Bwie%C5%BCenie-tokena-accesstoken)"
          }
        },
        "additionalProperties": false
      },
      "BatchFileInfo": {
        "required": [
          "fileHash",
          "fileParts",
          "fileSize"
        ],
        "type": "object",
        "properties": {
          "fileSize": {
            "type": "integer",
            "description": "Rozmiar pliku paczki.",
            "format": "int64"
          },
          "fileHash": {
            "type": "string",
            "description": "Skrót SHA256 pliku paczki, zakodowany w formacie Base64."
          },
          "fileParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchFilePartInfo"
            },
            "description": "Informacje o częściach pliku paczki."
          }
        },
        "additionalProperties": false
      },
      "BatchFilePartInfo": {
        "required": [
          "fileHash",
          "fileName",
          "fileSize",
          "ordinalNumber"
        ],
        "type": "object",
        "properties": {
          "ordinalNumber": {
            "type": "integer",
            "description": "Numer sekwencyjny części pliku paczki.",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "description": "Nazwa części pliku paczki."
          },
          "fileSize": {
            "type": "integer",
            "description": "Rozmiar części pliku paczki.",
            "format": "int64"
          },
          "fileHash": {
            "type": "string",
            "description": "Skrót SHA256 części pliku paczki, zakodowany w formacie Base64."
          }
        },
        "additionalProperties": false
      },
      "BuyerIdentifierType": {
        "enum": [
          "None",
          "Other",
          "Nip",
          "VatUe"
        ],
        "type": "string"
      },
      "CertificateEnrollmentDataResponse": {
        "required": [
          "commonName",
          "countryName"
        ],
        "type": "object",
        "properties": {
          "commonName": {
            "type": "string",
            "description": "Nazwa powszechna."
          },
          "countryName": {
            "type": "string",
            "description": "Kraj, kod ISO 3166."
          },
          "givenNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Imiona.",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "description": "Nazwisko.",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "description": "Numer seryjny podmiotu.",
            "nullable": true
          },
          "uniqueIdentifier": {
            "type": "string",
            "description": "Unikalny identyfikator.",
            "nullable": true
          },
          "organizationName": {
            "type": "string",
            "description": "Nazwa organizacji.",
            "nullable": true
          },
          "organizationIdentifier": {
            "type": "string",
            "description": "Identyfikator organizacji.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CertificateEnrollmentStatusResponse": {
        "required": [
          "requestDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "requestDate": {
            "type": "string",
            "description": "Data złożenia wniosku certyfikacyjnego.",
            "format": "date-time"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusInfo"
              }
            ],
            "description": "Informacje o aktualnym statusie.\r\n| Code | Description | Details |\r\n| --- | --- | --- |\r\n| 100 | Wniosek przyjęty do realizacji | - |\r\n| 200 | Wniosek obsłużony (certyfikat wygenerowany) | - |\r\n| 400 | Wniosek odrzucony | Klucz publiczny został już certyfikowany przez inny podmiot. |\r\n| 400 | Wniosek odrzucony | Osiągnięto dopuszczalny limit posiadanych certyfikatów. |\r\n| 500 | Nieznany błąd | - |"
          },
          "certificateSerialNumber": {
            "type": "string",
            "description": "Numer seryjny wygenerowanego certyfikatu (w formacie szesnastkowym). \r\nZwracany w przypadku prawidłowego przeprocesowania wniosku certyfikacyjnego.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CertificateLimit": {
        "required": [
          "limit",
          "remaining"
        ],
        "type": "object",
        "properties": {
          "remaining": {
            "type": "integer",
            "description": "Pozostała wartość limitu.",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Maksymalna liczba zasobów dozwolona w ramach limitu.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CertificateLimitsResponse": {
        "required": [
          "canRequest",
          "certificate",
          "enrollment"
        ],
        "type": "object",
        "properties": {
          "canRequest": {
            "type": "boolean",
            "description": "Flaga informująca czy uwierzytelniony podmiot może złożyć nowy wniosek o certyfikat.",
            "readOnly": true
          },
          "enrollment": {
            "required": [
              "remaining",
              "limit"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/CertificateLimit"
              }
            ],
            "description": "Informacje o limitach związanych z liczbą możliwych do złożenia wniosków certyfikacyjnych."
          },
          "certificate": {
            "required": [
              "remaining",
              "limit"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/CertificateLimit"
              }
            ],
            "description": "Informacje o limitach dotyczących liczby aktywnych certyfikatów wydanych dla danego podmiotu."
          }
        },
        "additionalProperties": false,
        "description": "Informacje o limitach wniosków oraz certyfikatów dla uwierzytelnionego podmiotu."
      },
      "CertificateListItem": {
        "required": [
          "certificateSerialNumber",
          "commonName",
          "name",
          "status",
          "subjectIdentifier",
          "subjectIdentifierType",
          "validFrom",
          "validTo"
        ],
        "type": "object",
        "properties": {
          "certificateSerialNumber": {
            "type": "string",
            "description": "Numer seryjny certyfikatu (w formacie szesnastkowym)."
          },
          "name": {
            "type": "string",
            "description": "Nazwa własna certyfikatu."
          },
          "commonName": {
            "type": "string",
            "description": "Nazwa powszechna (CN) podmiotu, dla którego wystawiono certyfikat."
          },
          "status": {
            "enum": [
              "Active",
              "Blocked",
              "Revoked",
              "Expired"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/CertificateListItemStatus"
              }
            ],
            "description": "Status certyfikatu.\r\n| Wartość | Opis |\r\n| --- | --- |\r\n| Active | Certyfikat jest aktywny i może zostać użyty do uwierzytelnienia. |\r\n| Blocked | Certyfikat został zablokowany i nie może zostać użyty do uwierzytelnienia.            Status przejściowy do czasu zakończenia procesu unieważniania. |\r\n| Revoked | Certyfikat został unieważniony i nie może zostać użyty do uwierzytelnienia. |\r\n| Expired | Certyfikat wygasł i nie może zostać użyty do uwierzytelnienia. |\r\n"
          },
          "subjectIdentifier": {
            "type": "string",
            "description": "Identyfikator podmiotu, dla którego wystawiono certyfikat."
          },
          "subjectIdentifierType": {
            "type": "string",
            "description": "Typ identyfikatora podmiotu, dla którego wystawiono certyfikat."
          },
          "validFrom": {
            "type": "string",
            "description": "Data rozpoczęcia ważności certyfikatu.",
            "format": "date-time"
          },
          "validTo": {
            "type": "string",
            "description": "Data wygaśnięcia certyfikatu.",
            "format": "date-time"
          },
          "lastUseDate": {
            "type": "string",
            "description": "Data ostatniego użycia certyfikatu.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CertificateListItemStatus": {
        "enum": [
          "Active",
          "Blocked",
          "Revoked",
          "Expired"
        ],
        "type": "string",
        "description": "| Wartość | Opis |\r\n| --- | --- |\r\n| Active | Certyfikat jest aktywny i może zostać użyty do uwierzytelnienia. |\r\n| Blocked | Certyfikat został zablokowany i nie może zostać użyty do uwierzytelnienia.            Status przejściowy do czasu zakończenia procesu unieważniania. |\r\n| Revoked | Certyfikat został unieważniony i nie może zostać użyty do uwierzytelnienia. |\r\n| Expired | Certyfikat wygasł i nie może zostać użyty do uwierzytelnienia. |\r\n"
      },
      "CertificateRevocationReason": {
        "enum": [
          "Unspecified",
          "Superseded",
          "KeyCompromise"
        ],
        "type": "string",
        "description": "| Wartość | Opis |\r\n| --- | --- |\r\n| Unspecified | Nieokreślony. |\r\n| Superseded | Certyfikat został zastąpiony przez inny. |\r\n| KeyCompromise | Klucz prywatny powiązany z certyfikatem został skompromitowany. |\r\n"
      },
      "CommonSessionStatus": {
        "enum": [
          "Succeeded",
          "InProgress",
          "Failed"
        ],
        "type": "string",
        "description": "| Wartość | Opis |\r\n| --- | --- |\r\n| Succeeded | Sesja przetworzona poprawnie.            W trakcie przetwarzania sesji nie wystąpiły żadne błędy, ale część faktur nadal mogła zostać odrzucona. |\r\n| InProgress | Sesja aktywna. |\r\n| Failed | Sesja nie przetworzona z powodu błędów.            Na etapie rozpoczynania lub kończenia sesji wystąpiły błędy, które nie pozwoliły na jej poprawne przetworzenie. |\r\n"
      },
      "ContextIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "None",
              "AllPartners",
              "Nip",
              "InternalId",
              "NipVatUe"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/ContextIdentifierType"
              }
            ],
            "description": "Typ identyfikatora"
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora"
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator kontekstu działania.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| InternalId | Dwuczłonowy identyfikator składający się z numeru NIP i 5 cyfr: `{nip}-{5_cyfr}` |\r\n| NipVatUe | Dwuczłonowy identyfikator składający się z numeru NIP i numeru VAT-UE: `{nip}-{vat_ue}` |"
      },
      "ContextIdentifierType": {
        "enum": [
          "None",
          "AllPartners",
          "Nip",
          "InternalId",
          "NipVatUe"
        ],
        "type": "string"
      },
      "CurrencyCode": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BOV",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHE",
          "CHF",
          "CHW",
          "CLF",
          "CLP",
          "CNY",
          "COP",
          "COU",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRU",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MXV",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SRD",
          "SSP",
          "STN",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "USN",
          "UYI",
          "UYU",
          "UYW",
          "UZS",
          "VES",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XAG",
          "XAU",
          "XBA",
          "XBB",
          "XBC",
          "XBD",
          "XCD",
          "XDR",
          "XOF",
          "XPD",
          "XPF",
          "XPT",
          "XSU",
          "XUA",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWL"
        ],
        "type": "string"
      },
      "DownloadInvoiceBuyer": {
        "required": [
          "identifierType"
        ],
        "type": "object",
        "properties": {
          "identifierType": {
            "enum": [
              "None",
              "Other",
              "Nip",
              "VatUe"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/BuyerIdentifierType"
              }
            ],
            "description": "Typ identyfikatora nabywcy."
          },
          "identifier": {
            "type": "string",
            "description": "Wartośc identyfikatora nabywcy. Wymagane jeśli IdentifierType != 'None'.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Nazwa podmiotu nabywcy, jeśli występuje na fakturze.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DownloadInvoiceRequest": {
        "required": [
          "invoiceMetadata",
          "ksefNumber"
        ],
        "type": "object",
        "properties": {
          "ksefNumber": {
            "type": "string",
            "description": "Numer KSeF faktury"
          },
          "invoiceMetadata": {
            "required": [
              "number",
              "totalAmountDue",
              "buyer"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/DwonloadInvoiceMetadata"
              }
            ],
            "description": "Dane identyfikujące fakturę."
          }
        },
        "additionalProperties": false
      },
      "DwonloadInvoiceMetadata": {
        "required": [
          "buyer",
          "number",
          "totalAmountDue"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Numer faktury."
          },
          "totalAmountDue": {
            "type": "number",
            "description": "Kwota należności ogółem.",
            "format": "double"
          },
          "buyer": {
            "required": [
              "identifierType"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/DownloadInvoiceBuyer"
              }
            ],
            "description": "Dane identyfikujące nabywce."
          }
        },
        "additionalProperties": false
      },
      "EncryptionInfo": {
        "required": [
          "encryptedSymmetricKey",
          "initializationVector"
        ],
        "type": "object",
        "properties": {
          "encryptedSymmetricKey": {
            "type": "string",
            "description": "Klucz symetryczny zaszyfrowany algorytmem RSA (Padding: OAEP z SHA-256), zakodowany w formacie Base64.\r\n\r\n[Klucz publiczny RSA](/public-keys/publicKey.pem)"
          },
          "initializationVector": {
            "type": "string",
            "description": "Wektor inicjalizujący (IV) używany do szyfrowania symetrycznego, zakodowany w formacie Base64."
          }
        },
        "additionalProperties": false
      },
      "EnrollCertificateRequest": {
        "required": [
          "certificateName",
          "csr"
        ],
        "type": "object",
        "properties": {
          "certificateName": {
            "type": "string",
            "description": "Nazwa własna certyfikatu."
          },
          "csr": {
            "type": "string",
            "description": "Wniosek certyfikacyjny PKCS#10 (CSR) w formacie DER zakodowany w Base64.",
            "format": "byte"
          },
          "validFrom": {
            "type": "string",
            "description": "Data rozpoczęcia ważności certyfikatu.\r\nJeśli nie zostanie podana, certyfikat będzie ważny od momentu jego wystawienia.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnrollCertificateResponse": {
        "required": [
          "referenceNumber",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "Numer referencyjny operacji przetwarzania wniosku certyfikacyjnego."
          },
          "timestamp": {
            "type": "string",
            "description": "Data złożenia wniosku certyfikacyjnego.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EntityAuthorizationGrant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identyfikator uprawnienia.",
            "nullable": true
          },
          "authorIdentifier": {
            "type": "string",
            "description": "Identyfikator osoby nadającej uprawnienie.",
            "nullable": true
          },
          "authorIdentifierType": {
            "enum": [
              "Nip",
              "Pesel",
              "Fingerprint"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityAuthorizationsAuthorIdentifierType"
              }
            ],
            "description": "Typ identyfikatora osoby nadającej uprawnienie.",
            "nullable": true
          },
          "authorizedEntityIdentifier": {
            "type": "string",
            "description": "Identyfikator podmiotu uprawnionego.",
            "nullable": true
          },
          "authorizedEntityIdentifierType": {
            "enum": [
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityAuthorizationsAuthorizedEntityIdentifierType"
              }
            ],
            "description": "Typ identyfikatora podmiotu uprawnionego."
          },
          "authorizingEntityIdentifier": {
            "type": "string",
            "description": "Identyfikator podmiotu uprawniającego.",
            "nullable": true
          },
          "authorizingEntityIdentifierType": {
            "enum": [
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityAuthorizationsAuthorizingEntityIdentifierType"
              }
            ],
            "description": "Typ identyfikatora podmiotu uprawniającego."
          },
          "authorizationScope": {
            "enum": [
              "SelfInvoicing",
              "TaxRepresentative",
              "RRInvoicing"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoicePermissionType"
              }
            ],
            "description": "Uprawnienie."
          },
          "description": {
            "type": "string",
            "description": "Opis uprawnienia.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Data rozpoczęcia obowiązywania uprawnienia.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EntityAuthorizationPermissionType": {
        "enum": [
          "SelfInvoicing",
          "RRInvoicing",
          "TaxRepresentative"
        ],
        "type": "string"
      },
      "EntityAuthorizationPermissionsGrantRequest": {
        "required": [
          "description",
          "permission",
          "subjectIdentifier"
        ],
        "type": "object",
        "properties": {
          "subjectIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityAuthorizationPermissionsSubjectIdentifier"
              }
            ],
            "description": "Identyfikator podmiotu.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |"
          },
          "permission": {
            "enum": [
              "SelfInvoicing",
              "RRInvoicing",
              "TaxRepresentative"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityAuthorizationPermissionType"
              }
            ],
            "description": "Nadawane uprawnienie o charakterze upoważnienia."
          },
          "description": {
            "type": "string",
            "description": "Opis nadawanego uprawnienia."
          }
        },
        "additionalProperties": false
      },
      "EntityAuthorizationPermissionsQueryRequest": {
        "required": [
          "queryType"
        ],
        "type": "object",
        "properties": {
          "authorizingIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityAuthorizationsAuthorizingEntityIdentifier"
              }
            ],
            "description": "Identyfikator podmiotu uprawniającego.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |",
            "nullable": true
          },
          "authorizedIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityAuthorizationsAuthorizedEntityIdentifier"
              }
            ],
            "description": "Identyfikator podmiotu uprawnionego.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |",
            "nullable": true
          },
          "queryType": {
            "enum": [
              "Granted",
              "Received"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryType"
              }
            ],
            "description": "Typ zapytania.\r\n| Type | Value |\r\n| --- | --- |\r\n| Granted | Uprawnienia nadane innym podmiotom |\r\n| Received | Uprawnienia otrzymane od innych podmiotów |"
          },
          "permissionTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicePermissionType"
            },
            "description": "Możliwe uprawnienia do filtrowania.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntityAuthorizationPermissionsSubjectIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityAuthorizationPermissionsSubjectIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator podmiotu.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |"
      },
      "EntityAuthorizationPermissionsSubjectIdentifierType": {
        "enum": [
          "Nip"
        ],
        "type": "string"
      },
      "EntityAuthorizationsAuthorIdentifierType": {
        "enum": [
          "Nip",
          "Pesel",
          "Fingerprint"
        ],
        "type": "string"
      },
      "EntityAuthorizationsAuthorizedEntityIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityAuthorizationsAuthorizedEntityIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator podmiotu uprawnionego.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |"
      },
      "EntityAuthorizationsAuthorizedEntityIdentifierType": {
        "enum": [
          "Nip"
        ],
        "type": "string"
      },
      "EntityAuthorizationsAuthorizingEntityIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityAuthorizationsAuthorizingEntityIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator podmiotu uprawniającego.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |"
      },
      "EntityAuthorizationsAuthorizingEntityIdentifierType": {
        "enum": [
          "Nip"
        ],
        "type": "string"
      },
      "EntityPermission": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "InvoiceWrite",
              "InvoiceRead"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityPermissionType"
              }
            ],
            "description": "Możliwe uprawnienia do nadania."
          },
          "canDelegate": {
            "type": "boolean",
            "description": "Flaga pozwalająca na pośrednie przekazywanie danego uprawnienia"
          }
        },
        "additionalProperties": false
      },
      "EntityPermissionType": {
        "enum": [
          "InvoiceWrite",
          "InvoiceRead"
        ],
        "type": "string"
      },
      "EntityPermissionsGrantRequest": {
        "required": [
          "description",
          "permissions",
          "subjectIdentifier"
        ],
        "type": "object",
        "properties": {
          "subjectIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityPermissionsSubjectIdentifier"
              }
            ],
            "description": "Identyfikator podmiotu.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityPermission"
            },
            "description": "Lista nadawanych uprawnień. Każda wartość może wystąpić tylko raz."
          },
          "description": {
            "type": "string",
            "description": "Opis nadawanych uprawnień."
          }
        },
        "additionalProperties": false
      },
      "EntityPermissionsSubjectIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityPermissionsSubjectIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator podmiotu.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |"
      },
      "EntityPermissionsSubjectIdentifierType": {
        "enum": [
          "Nip"
        ],
        "type": "string"
      },
      "EntityPermissionsSubordinateEntityIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityPermissionsSubordinateEntityIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator podmiotu podrzędnego.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |"
      },
      "EntityPermissionsSubordinateEntityIdentifierType": {
        "enum": [
          "Nip"
        ],
        "type": "string"
      },
      "EntityRole": {
        "type": "object",
        "properties": {
          "parentEntityIdentifier": {
            "type": "string",
            "description": "Identyfikator podmiotu nadrzędnego.",
            "nullable": true
          },
          "parentEntityIdentifierType": {
            "enum": [
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityRolesParentEntityIdentifierType"
              }
            ],
            "description": "Typ identyfikatora podmiotu nadrzędnego.",
            "nullable": true
          },
          "role": {
            "enum": [
              "CourtBailiff",
              "EnforcementAuthority",
              "LocalGovernmentUnit",
              "LocalGovernmentSubUnit",
              "VatGroupUnit",
              "VatGroupSubUnit"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityRoleType"
              }
            ],
            "description": "Rola."
          },
          "description": {
            "type": "string",
            "description": "Opis.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Data rozpoczęcia obowiązywania roli.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EntityRoleType": {
        "enum": [
          "CourtBailiff",
          "EnforcementAuthority",
          "LocalGovernmentUnit",
          "LocalGovernmentSubUnit",
          "VatGroupUnit",
          "VatGroupSubUnit"
        ],
        "type": "string"
      },
      "EntityRolesParentEntityIdentifierType": {
        "enum": [
          "Nip"
        ],
        "type": "string"
      },
      "EuEntityAdministrationPermissionsContextIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "NipVatUe"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EuEntityAdministrationPermissionsContextIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator zlożony z podmiotu polskiego i podmiotu unijnego.\r\n| Type | Value |\r\n| --- | --- |\r\n| NipVatUe | Dwuczłonowy identyfikator składający się z numeru NIP i numeru VAT-UE: `{nip}-{vat_ue}` |"
      },
      "EuEntityAdministrationPermissionsContextIdentifierType": {
        "enum": [
          "NipVatUe"
        ],
        "type": "string"
      },
      "EuEntityAdministrationPermissionsGrantRequest": {
        "required": [
          "contextIdentifier",
          "description",
          "subjectIdentifier"
        ],
        "type": "object",
        "properties": {
          "subjectIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EuEntityAdministrationPermissionsSubjectIdentifier"
              }
            ],
            "description": "Identyfikator podmiotu.\r\n| Type | Value |\r\n| --- | --- |\r\n| Fingerprint | Odcisk palca certyfikatu |"
          },
          "contextIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EuEntityAdministrationPermissionsContextIdentifier"
              }
            ],
            "description": "Identyfikator zlożony z podmiotu polskiego i podmiotu unijnego.\r\n| Type | Value |\r\n| --- | --- |\r\n| NipVatUe | Dwuczłonowy identyfikator składający się z numeru NIP i numeru VAT-UE: `{nip}-{vat_ue}` |"
          },
          "description": {
            "type": "string",
            "description": "Opis nadawanych uprawnień."
          }
        },
        "additionalProperties": false
      },
      "EuEntityAdministrationPermissionsSubjectIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Fingerprint"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EuEntityAdministrationPermissionsSubjectIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator podmiotu.\r\n| Type | Value |\r\n| --- | --- |\r\n| Fingerprint | Odcisk palca certyfikatu |"
      },
      "EuEntityAdministrationPermissionsSubjectIdentifierType": {
        "enum": [
          "Fingerprint"
        ],
        "type": "string"
      },
      "EuEntityPermission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identyfikator uprawnienia.",
            "nullable": true
          },
          "authorIdentifier": {
            "type": "string",
            "description": "Identyfikator uprawniającego.",
            "nullable": true
          },
          "authorIdentifierType": {
            "enum": [
              "Nip",
              "Pesel",
              "Fingerprint"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EuEntityPermissionsAuthorIdentifierType"
              }
            ],
            "description": "Typ identyfikatora uprawniającego."
          },
          "vatUeIdentifier": {
            "type": "string",
            "description": "Identyfikator podmiotu unijnego.",
            "nullable": true
          },
          "euEntityName": {
            "type": "string",
            "description": "Nazwa podmiotu unijnego.",
            "nullable": true
          },
          "authorizedFingerprintIdentifier": {
            "type": "string",
            "description": "Uprawniony odcisk palca certyfikatu.",
            "nullable": true
          },
          "permissionScope": {
            "enum": [
              "VatUeManage",
              "InvoiceWrite",
              "InvoiceRead",
              "Introspection"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EuEntityPermissionsQueryPermissionType"
              }
            ],
            "description": "Uprawnienie."
          },
          "description": {
            "type": "string",
            "description": "Opis uprawnienia.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Data rozpoczęcia obowiązywania uprawnienia.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EuEntityPermissionType": {
        "enum": [
          "InvoiceWrite",
          "InvoiceRead"
        ],
        "type": "string"
      },
      "EuEntityPermissionsAuthorIdentifierType": {
        "enum": [
          "Nip",
          "Pesel",
          "Fingerprint"
        ],
        "type": "string"
      },
      "EuEntityPermissionsGrantRequest": {
        "required": [
          "description",
          "permissions",
          "subjectIdentifier"
        ],
        "type": "object",
        "properties": {
          "subjectIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EuEntityPermissionsSubjectIdentifier"
              }
            ],
            "description": "Identyfikator podmiotu.\r\n| Type | Value |\r\n| --- | --- |\r\n| Fingerprint | Odcisk palca certyfikatu |"
          },
          "permissions": {
            "enum": [
              "InvoiceWrite",
              "InvoiceRead"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EuEntityPermissionType"
            },
            "description": "Lista nadawanych uprawnień. Każda wartość może wystąpić tylko raz."
          },
          "description": {
            "type": "string",
            "description": "Opis nadawanych uprawnień."
          }
        },
        "additionalProperties": false
      },
      "EuEntityPermissionsQueryPermissionType": {
        "enum": [
          "VatUeManage",
          "InvoiceWrite",
          "InvoiceRead",
          "Introspection"
        ],
        "type": "string"
      },
      "EuEntityPermissionsQueryRequest": {
        "type": "object",
        "properties": {
          "vatUeIdentifier": {
            "type": "string",
            "description": "Identyfikator podmiotu unijnego.",
            "nullable": true
          },
          "authorizedFingerprintIdentifier": {
            "type": "string",
            "description": "Uprawniony odcisk palca certyfikatu.",
            "nullable": true
          },
          "permissionTypes": {
            "enum": [
              "VatUeManage",
              "InvoiceWrite",
              "InvoiceRead",
              "Introspection"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EuEntityPermissionsQueryPermissionType"
            },
            "description": "Możliwe uprawnienia do filtrowania.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EuEntityPermissionsSubjectIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Fingerprint"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EuEntityPermissionsSubjectIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator podmiotu.\r\n| Type | Value |\r\n| --- | --- |\r\n| Fingerprint | Odcisk palca certyfikatu |"
      },
      "EuEntityPermissionsSubjectIdentifierType": {
        "enum": [
          "Fingerprint"
        ],
        "type": "string"
      },
      "ExceptionDetails": {
        "type": "object",
        "properties": {
          "exceptionCode": {
            "type": "integer",
            "format": "int32"
          },
          "exceptionDescription": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExceptionInfo": {
        "type": "object",
        "properties": {
          "exceptionDetailList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionDetails"
            },
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "serviceCode": {
            "type": "string",
            "nullable": true
          },
          "serviceCtx": {
            "type": "string",
            "nullable": true
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ExceptionResponse": {
        "type": "object",
        "properties": {
          "exception": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExceptionInfo"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormCode": {
        "required": [
          "schemaVersion",
          "systemCode",
          "value"
        ],
        "type": "object",
        "properties": {
          "systemCode": {
            "type": "string",
            "description": "Kod systemowy"
          },
          "schemaVersion": {
            "type": "string",
            "description": "Wersja schematu"
          },
          "value": {
            "type": "string",
            "description": "Wartość"
          }
        },
        "additionalProperties": false,
        "description": "Obsługiwane schematy:\r\n| SystemCode | SchemaVersion | Value |\r\n| --- | --- | --- |\r\n| FA (2) | 1-0E | FA |\r\n| FA (3) | 1-0E | FA |\r\n"
      },
      "GenerateTokenRequest": {
        "type": "object",
        "properties": {
          "permissions": {
            "enum": [
              "InvoiceRead",
              "InvoiceWrite",
              "CredentialsRead",
              "CredentialsManage"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPermissionType"
            },
            "description": "Uprawnienia przypisane tokenowi.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Opis tokena.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerateTokenResponse": {
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "Numer referencyjny tokena KSeF. Za jego pomocą można sprawdzić jego status lub go unieważnić.",
            "nullable": true
          },
          "token": {
            "type": "string",
            "description": "Token KSeF.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IndirectPermissionType": {
        "enum": [
          "InvoiceRead",
          "InvoiceWrite"
        ],
        "type": "string"
      },
      "IndirectPermissionsGrantRequest": {
        "required": [
          "description",
          "permissions",
          "subjectIdentifier"
        ],
        "type": "object",
        "properties": {
          "subjectIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/IndirectPermissionsSubjectIdentifier"
              }
            ],
            "description": "Identyfikator osoby fizycznej.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| Pesel | 11 cyfrowy numer PESEL |\r\n| Fingerprint | Odcisk palca certyfikatu |"
          },
          "targetIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/IndirectPermissionsTargetIdentifier"
              }
            ],
            "description": "Identyfikator podmiotu, w którego kontekście chcemy pośrednio nadać uprawnienia. W przypadku nadawania uprawnienia generalnego, pole to powinno mieć wartość null.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| InternalId | Dwuczłonowy identyfikator składający się z numeru NIP i 5 cyfr: `{nip}-{5_cyfr}` |",
            "nullable": true
          },
          "permissions": {
            "enum": [
              "InvoiceRead",
              "InvoiceWrite"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndirectPermissionType"
            },
            "description": "Lista nadawanych uprawnień. Każda wartość może wystąpić tylko raz."
          },
          "description": {
            "type": "string",
            "description": "Opis nadawanych uprawnień."
          }
        },
        "additionalProperties": false
      },
      "IndirectPermissionsSubjectIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Nip",
              "Pesel",
              "Fingerprint"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/IndirectPermissionsSubjectIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator osoby fizycznej.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| Pesel | 11 cyfrowy numer PESEL |\r\n| Fingerprint | Odcisk palca certyfikatu |"
      },
      "IndirectPermissionsSubjectIdentifierType": {
        "enum": [
          "Nip",
          "Pesel",
          "Fingerprint"
        ],
        "type": "string"
      },
      "IndirectPermissionsTargetIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Nip",
              "InternalId"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/IndirectPermissionsTargetIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator podmiotu, w którego kontekście chcemy pośrednio nadać uprawnienia. W przypadku nadawania uprawnienia generalnego, pole to powinno mieć wartość null.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| InternalId | Dwuczłonowy identyfikator składający się z numeru NIP i 5 cyfr: `{nip}-{5_cyfr}` |"
      },
      "IndirectPermissionsTargetIdentifierType": {
        "enum": [
          "Nip",
          "InternalId"
        ],
        "type": "string"
      },
      "InitAsyncInvoicesQueryResponse": {
        "type": "object",
        "properties": {
          "operationReferenceNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusInfo"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InitTokenAuthenticationRequest": {
        "required": [
          "challenge",
          "contextIdentifier",
          "encryptedToken"
        ],
        "type": "object",
        "properties": {
          "challenge": {
            "type": "string",
            "description": "Wygenerowany wcześniej challenge."
          },
          "contextIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/ContextIdentifier"
              }
            ],
            "description": "Indentyfikator kontekstu do którego następuje uwierzytelnienie."
          },
          "encryptedToken": {
            "type": "string",
            "description": "Zaszyfrowany token wraz z timestampem z challenge'a, w formacie `token|timestamp`."
          },
          "ipAddressPolicy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IpAddressPolicy"
              }
            ],
            "description": "Reguła walidacji adresu IP klienta przy każdym użyciu tokena dostępu.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceMetadata": {
        "required": [
          "acquisitionDate",
          "buyer",
          "currency",
          "formCode",
          "grossAmount",
          "invoiceDate",
          "invoiceNumber",
          "invoiceType",
          "invoicingMode",
          "isHidden",
          "isSelfInvoicing",
          "ksefNumber",
          "netAmount",
          "seller",
          "vatAmount"
        ],
        "type": "object",
        "properties": {
          "ksefNumber": {
            "type": "string",
            "description": "Numer KSeF faktury."
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Numer faktury nadany przez wystawcę."
          },
          "invoiceDate": {
            "type": "string",
            "description": "Data wystawienia faktury.",
            "format": "date-time"
          },
          "acquisitionDate": {
            "type": "string",
            "description": "Data przyjęcia faktury do systemu KSeF.",
            "format": "date-time"
          },
          "seller": {
            "required": [
              "identifier"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceMetadataSeller"
              }
            ],
            "description": "Dane identyfikujące sprzedawcę."
          },
          "buyer": {
            "required": [
              "identifierType"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceMetadataBuyer"
              }
            ],
            "description": "Dane identyfikujące nabywcę."
          },
          "netAmount": {
            "type": "number",
            "description": "Łączna kwota netto.",
            "format": "double"
          },
          "grossAmount": {
            "type": "number",
            "description": "Łączna kwota brutto.",
            "format": "double"
          },
          "vatAmount": {
            "type": "number",
            "description": "Łączna kwota VAT.",
            "format": "double"
          },
          "currency": {
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UYW",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyCode"
              }
            ],
            "description": "Kod waluty."
          },
          "invoicingMode": {
            "enum": [
              "Online",
              "Offline"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoicingMode"
              }
            ],
            "description": "Tryb fakturowania (online/offline)."
          },
          "invoiceType": {
            "enum": [
              "Vat",
              "Kor",
              "Zal",
              "Roz",
              "Upr",
              "Kor_Zal",
              "Kor_Roz"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceMetadataInvoiceType"
              }
            ],
            "description": "Rodzaj faktury."
          },
          "formCode": {
            "required": [
              "systemCode",
              "schemaVersion",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/FormCode"
              }
            ],
            "description": "Struktura dokumentu faktury.\r\n\r\nObsługiwane schematy:\r\n| SystemCode | SchemaVersion | Value |\r\n| --- | --- | --- |\r\n| FA (2) | 1-0E | FA |\r\n| FA (3) | 1-0E | FA |\r\n"
          },
          "isHidden": {
            "type": "boolean",
            "description": "Czy faktura została oznaczona jako ukryta."
          },
          "isSelfInvoicing": {
            "type": "boolean",
            "description": "Czy faktura została wystawiona w trybie samofakturowania."
          }
        },
        "additionalProperties": false
      },
      "InvoiceMetadataBuyer": {
        "required": [
          "identifierType"
        ],
        "type": "object",
        "properties": {
          "identifierType": {
            "enum": [
              "None",
              "Other",
              "Nip",
              "VatUe"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/BuyerIdentifierType"
              }
            ],
            "description": "Typ identyfikatora nabywcy."
          },
          "identifier": {
            "type": "string",
            "description": "Wartośc identyfikatora nabywcy.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Nazwa nabywcy.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceMetadataInvoiceType": {
        "enum": [
          "Vat",
          "Kor",
          "Zal",
          "Roz",
          "Upr",
          "Kor_Zal",
          "Kor_Roz"
        ],
        "type": "string"
      },
      "InvoiceMetadataSchema": {
        "enum": [
          "FA"
        ],
        "type": "string"
      },
      "InvoiceMetadataSeller": {
        "required": [
          "identifier"
        ],
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Identyfikator sprzedawcy."
          },
          "name": {
            "type": "string",
            "description": "Nazwa sprzedawcy.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoicePackagePart": {
        "type": "object",
        "properties": {
          "ordinalNumber": {
            "type": "integer",
            "description": "Numer porządkowy pliku w ramach całego zbioru wynikowego.",
            "format": "int32"
          },
          "method": {
            "type": "string",
            "description": "Metoda HTTP, której należy użyć przy pobieraniu pliku.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Adres URL, pod który należy wysłać żądanie pobrania pliku.",
            "format": "uri",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "description": "Data wygaśnięcia linku do pobrania pliku.",
            "format": "date-time"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Nagłówki, których należy użyć przy pobieraniu pliku.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoicePermissionType": {
        "enum": [
          "SelfInvoicing",
          "TaxRepresentative",
          "RRInvoicing"
        ],
        "type": "string"
      },
      "InvoiceQueryAmount": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Brutto",
              "Netto",
              "Vat"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountType"
              }
            ],
            "nullable": true
          },
          "from": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "to": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceQueryBuyer": {
        "type": "object",
        "properties": {
          "identifierType": {
            "enum": [
              "None",
              "Other",
              "Nip",
              "VatUe"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/BuyerIdentifierType"
              }
            ],
            "description": "Typ identyfikatora nabywcy.",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "description": "Wartość identyfikatora nabywcy.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Nazwa nabywcy.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceQueryDateRange": {
        "required": [
          "dateType",
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "dateType": {
            "enum": [
              "Issue",
              "Invoicing",
              "Acquisition",
              "Hidden"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceQueryDateType"
              }
            ],
            "description": "Typ daty, według której ma być zastosowany zakres.\r\n| Wartość | Opis |\r\n| --- | --- |\r\n| Issue | Data wystawienia faktury. |\r\n| Invoicing | Data przyjęcia faktury w systemie KSeF. |\r\n| Acquisition | Data nadania numeru KSeF. |\r\n| Hidden | Data ukrycia faktury w systemie KSeF. |\r\n"
          },
          "from": {
            "type": "string",
            "description": "Data początkowa zakresu.",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "description": "Data końcowa zakresu.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "InvoiceQueryDateType": {
        "enum": [
          "Issue",
          "Invoicing",
          "Acquisition",
          "Hidden"
        ],
        "type": "string",
        "description": "| Wartość | Opis |\r\n| --- | --- |\r\n| Issue | Data wystawienia faktury. |\r\n| Invoicing | Data przyjęcia faktury w systemie KSeF. |\r\n| Acquisition | Data nadania numeru KSeF. |\r\n| Hidden | Data ukrycia faktury w systemie KSeF. |\r\n"
      },
      "InvoiceQuerySeller": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Identyfikator sprzedawcy.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Nazwa sprzedawcy.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceQuerySubjectType": {
        "enum": [
          "Subject1",
          "Subject2",
          "Subject3",
          "SubjectAuthorized"
        ],
        "type": "string"
      },
      "InvoiceStatusResponse": {
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "ordinalNumber": {
            "type": "integer",
            "format": "int32"
          },
          "ksefNumber": {
            "type": "string",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "invoiceFileName": {
            "type": "string",
            "nullable": true
          },
          "receiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusInfo"
              }
            ],
            "description": "Status faktury.\r\n\r\n| Code | Description | Details |\r\n| --- | --- | --- |\r\n| 100 | Dokument faktury przyjęty | - |\r\n| 200 | Sukces | - |\r\n| 300 | Trwa przetwarzanie | - |\r\n| 410 | Nieprawidłowy zakres uprawnień | - |\r\n| 430 | Błąd weryfikacji pliku faktury | - |\r\n| 435 | Błąd odszyfrowania pliku | - |\r\n| 440 | Duplikat faktury | - |\r\n| 450 | Błąd weryfikacji semantyki dokumentu faktury | - |\r\n| 500 | Nieznany błąd ({statusCode}) | - |",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoicesAsyncQueryRequest": {
        "required": [
          "dateRange",
          "encryption",
          "subjectType"
        ],
        "type": "object",
        "properties": {
          "encryption": {
            "required": [
              "encryptedSymmetricKey",
              "initializationVector"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EncryptionInfo"
              }
            ],
            "description": "Informacje wymagane do zaszyfrowania wyniku zapytania."
          },
          "subjectType": {
            "enum": [
              "Subject1",
              "Subject2",
              "Subject3",
              "SubjectAuthorized"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceQuerySubjectType"
              }
            ],
            "description": "Typ podmiotu, którego dotyczą kryteria filtrowania metadanych faktur.\r\nOkreśla kontekst, w jakim przeszukiwane są dane."
          },
          "dateRange": {
            "required": [
              "dateType",
              "from",
              "to"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceQueryDateRange"
              }
            ],
            "description": "Typ i zakres dat, według którego mają być filtrowane faktury."
          },
          "ksefNumber": {
            "type": "string",
            "description": "Numer KSeF faktury.",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Numer faktury nadany przez wystawcę.",
            "nullable": true
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceQueryAmount"
              }
            ],
            "description": "Filtr kwotowy – brutto, netto lub VAT (z wartością).",
            "nullable": true
          },
          "seller": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceQuerySeller"
              }
            ],
            "description": "Dane sprzedawcy.",
            "nullable": true
          },
          "buyer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceQueryBuyer"
              }
            ],
            "description": "Dane nabywcy.",
            "nullable": true
          },
          "currencyCodes": {
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UYW",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyCode"
            },
            "description": "Kody walut.",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean",
            "description": "Czy faktura została oznaczona jako ukryta.",
            "nullable": true
          },
          "invoicingMode": {
            "enum": [
              "Online",
              "Offline"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoicingMode"
              }
            ],
            "description": "Tryb wystawienia faktury: online lub offline.",
            "nullable": true
          },
          "isSelfInvoicing": {
            "type": "boolean",
            "description": "Czy faktura została wystawiona w trybie samofakturowania.",
            "nullable": true
          },
          "invoiceSchema": {
            "enum": [
              "FA"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceMetadataSchema"
              }
            ],
            "description": "Typ schematu dokumentu.",
            "nullable": true
          },
          "invoiceTypes": {
            "enum": [
              "Vat",
              "Kor",
              "Zal",
              "Roz",
              "Upr",
              "Kor_Zal",
              "Kor_Roz"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceMetadataInvoiceType"
            },
            "description": "Rodzaje faktur.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoicesQueryRequest": {
        "required": [
          "dateRange",
          "subjectType"
        ],
        "type": "object",
        "properties": {
          "subjectType": {
            "enum": [
              "Subject1",
              "Subject2",
              "Subject3",
              "SubjectAuthorized"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceQuerySubjectType"
              }
            ],
            "description": "Typ podmiotu, którego dotyczą kryteria filtrowania metadanych faktur.\r\nOkreśla kontekst, w jakim przeszukiwane są dane."
          },
          "dateRange": {
            "required": [
              "dateType",
              "from",
              "to"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceQueryDateRange"
              }
            ],
            "description": "Typ i zakres dat, według którego mają być filtrowane faktury."
          },
          "ksefNumber": {
            "type": "string",
            "description": "Numer KSeF faktury.",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Numer faktury nadany przez wystawcę.",
            "nullable": true
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceQueryAmount"
              }
            ],
            "description": "Filtr kwotowy – brutto, netto lub VAT (z wartością).",
            "nullable": true
          },
          "seller": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceQuerySeller"
              }
            ],
            "description": "Dane sprzedawcy.",
            "nullable": true
          },
          "buyer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceQueryBuyer"
              }
            ],
            "description": "Dane nabywcy.",
            "nullable": true
          },
          "currencyCodes": {
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UYW",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyCode"
            },
            "description": "Kody walut.",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean",
            "description": "Czy faktura została oznaczona jako ukryta.",
            "nullable": true
          },
          "invoicingMode": {
            "enum": [
              "Online",
              "Offline"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoicingMode"
              }
            ],
            "description": "Tryb wystawienia faktury: online lub offline.",
            "nullable": true
          },
          "isSelfInvoicing": {
            "type": "boolean",
            "description": "Czy faktura została wystawiona w trybie samofakturowania.",
            "nullable": true
          },
          "invoiceSchema": {
            "enum": [
              "FA"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceMetadataSchema"
              }
            ],
            "description": "Typ schematu dokumentu.",
            "nullable": true
          },
          "invoiceTypes": {
            "enum": [
              "Vat",
              "Kor",
              "Zal",
              "Roz",
              "Upr",
              "Kor_Zal",
              "Kor_Roz"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceMetadataInvoiceType"
            },
            "description": "Rodzaje faktur.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoicingMode": {
        "enum": [
          "Online",
          "Offline"
        ],
        "type": "string"
      },
      "IpAddressPolicy": {
        "type": "object",
        "properties": {
          "onClientIpChange": {
            "enum": [
              "Reject",
              "Ignore"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/IpChangePolicy"
              }
            ],
            "description": "Określa reakcję systemu, gdy token dostępu zostanie użyty z adresu IP spoza zadeklarowanej listy dozwolonych adresów IP (allowedIps).",
            "nullable": true
          },
          "allowedIps": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AllowedIps"
              }
            ],
            "description": "Lista dozwolonych adresów IP.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IpChangePolicy": {
        "enum": [
          "Reject",
          "Ignore"
        ],
        "type": "string"
      },
      "OpenBatchSessionRequest": {
        "required": [
          "batchFile",
          "encryption",
          "formCode"
        ],
        "type": "object",
        "properties": {
          "formCode": {
            "required": [
              "systemCode",
              "schemaVersion",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/FormCode"
              }
            ],
            "description": "Schemat faktur wysyłanych w ramach sesji.\r\n\r\nObsługiwane schematy:\r\n| SystemCode | SchemaVersion | Value |\r\n| --- | --- | --- |\r\n| FA (2) | 1-0E | FA |\r\n| FA (3) | 1-0E | FA |\r\n"
          },
          "batchFile": {
            "required": [
              "fileSize",
              "fileHash",
              "fileParts"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/BatchFileInfo"
              }
            ],
            "description": "Informacje o przesyłanej paczce faktur."
          },
          "encryption": {
            "required": [
              "encryptedSymmetricKey",
              "initializationVector"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EncryptionInfo"
              }
            ],
            "description": "Symetryczny klucz szyfrujący plik paczki, zaszyfrowany kluczem publicznym Ministerstwa Finansów."
          },
          "offlineMode": {
            "type": "boolean",
            "description": "Określa, czy podatnik deklaruje tryb fakurowania \"offline\" dla dokumentów przesyłanych w sesji wsadowej.",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "OpenBatchSessionResponse": {
        "required": [
          "partUploadRequests",
          "referenceNumber"
        ],
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "Numer referencyjny sesji."
          },
          "partUploadRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartUploadRequest"
            },
            "description": "Dane wymagane do poprawnego przesłania poszczególnych części pliku paczki faktur."
          }
        },
        "additionalProperties": false
      },
      "OpenOnlineSessionRequest": {
        "required": [
          "encryption",
          "formCode"
        ],
        "type": "object",
        "properties": {
          "formCode": {
            "required": [
              "systemCode",
              "schemaVersion",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/FormCode"
              }
            ],
            "description": "Schemat faktur wysyłanych w ramach sesji.\r\n\r\nObsługiwane schematy:\r\n| SystemCode | SchemaVersion | Value |\r\n| --- | --- | --- |\r\n| FA (2) | 1-0E | FA |\r\n| FA (3) | 1-0E | FA |\r\n"
          },
          "encryption": {
            "required": [
              "encryptedSymmetricKey",
              "initializationVector"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EncryptionInfo"
              }
            ],
            "description": "Symetryczny klucz szyfrujący pliki XML, zaszyfrowany kluczem publicznym Ministerstwa Finansów."
          }
        },
        "additionalProperties": false
      },
      "OpenOnlineSessionResponse": {
        "required": [
          "referenceNumber"
        ],
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "Numer referencyjny sesji."
          }
        },
        "additionalProperties": false
      },
      "PartUploadRequest": {
        "type": "object",
        "properties": {
          "ordinalNumber": {
            "type": "integer",
            "description": "Numer sekwencyjny części pliku paczki.",
            "format": "int32"
          },
          "method": {
            "type": "string",
            "description": "Metoda HTTP, której należy użyć przy wysyłce części pliku paczki.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Adres pod który należy wysłać część pliku paczki.",
            "format": "uri",
            "nullable": true
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Nagłówki, których należy użyć przy wysyłce części pliku paczki.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionState": {
        "enum": [
          "Active",
          "Inactive"
        ],
        "type": "string"
      },
      "PermissionsOperationResponse": {
        "type": "object",
        "properties": {
          "operationReferenceNumber": {
            "type": "string",
            "description": "Numer referencyjny asynchronicznej operacji nadawania lub odbierania uprawnień.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionsOperationStatusResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusInfo"
              }
            ],
            "description": "Informacje o aktualnym statusie.\r\n| Code | Description | Details |\r\n| --- | --- | --- |\r\n| 100 | Operacja przyjęta do realizacji | - |\r\n| 200 | Operacja zakończona sukcesem | - |\r\n| 400 | Operacja zakończona niepowodzeniem | - |\r\n| 500 | Nieznany błąd | - |"
          }
        },
        "additionalProperties": false
      },
      "PersonCreateRequest": {
        "type": "object",
        "properties": {
          "nip": {
            "type": "string",
            "nullable": true
          },
          "pesel": {
            "type": "string",
            "nullable": true
          },
          "isBailiff": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonPermission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identyfikator uprawnienia.",
            "nullable": true
          },
          "authorizedIdentifier": {
            "type": "string",
            "description": "Identyfikator uprawnionego.",
            "nullable": true
          },
          "authorizedIdentifierType": {
            "enum": [
              "Nip",
              "Pesel",
              "Fingerprint"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonPermissionsAuthorizedIdentifierType"
              }
            ],
            "description": "Typ identyfikatora uprawnionego."
          },
          "targetIdentifier": {
            "type": "string",
            "description": "Identyfikator podmiotu docelowego.",
            "nullable": true
          },
          "targetIdentifierType": {
            "enum": [
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonPermissionsTargetIdentifierType"
              }
            ],
            "description": "Typ identyfikatora podmiotu docelowego.",
            "nullable": true
          },
          "authorIdentifier": {
            "type": "string",
            "description": "Identyfikator uprawniającego.",
            "nullable": true
          },
          "authorIdentifierType": {
            "enum": [
              "Nip",
              "Pesel",
              "Fingerprint"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonPermissionsAuthorIdentifierType"
              }
            ],
            "description": "Typ identyfikatora uprawniającego."
          },
          "permissionScope": {
            "enum": [
              "CredentialsManage",
              "CredentialsRead",
              "InvoiceWrite",
              "InvoiceRead",
              "Introspection",
              "SubunitManage",
              "EnforcementOperations",
              "Owner"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonPermissionScope"
              }
            ],
            "description": "Uprawnienie."
          },
          "description": {
            "type": "string",
            "description": "Opis uprawnienia.",
            "nullable": true
          },
          "permissionState": {
            "enum": [
              "Active",
              "Inactive"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PermissionState"
              }
            ],
            "description": "Stan uprawnienia."
          },
          "startDate": {
            "type": "string",
            "description": "Data rozpoczęcia obowiązywania uprawnienia.",
            "format": "date-time"
          },
          "canDelegate": {
            "type": "boolean",
            "description": "Informacja o możliwości dalszego nadawania uprawnienia w sposób pośredni."
          }
        },
        "additionalProperties": false
      },
      "PersonPermissionScope": {
        "enum": [
          "CredentialsManage",
          "CredentialsRead",
          "InvoiceWrite",
          "InvoiceRead",
          "Introspection",
          "SubunitManage",
          "EnforcementOperations",
          "Owner"
        ],
        "type": "string"
      },
      "PersonPermissionType": {
        "enum": [
          "CredentialsManage",
          "CredentialsRead",
          "InvoiceWrite",
          "InvoiceRead",
          "Introspection",
          "SubunitManage",
          "EnforcementOperations"
        ],
        "type": "string"
      },
      "PersonPermissionsAuthorIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Nip",
              "Pesel",
              "Fingerprint"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonPermissionsAuthorIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator osoby lub podmiotu nadającego uprawnienie.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| Pesel | 11 cyfrowy numer PESEL |\r\n| Fingerprint | Odcisk palca certyfikatu |"
      },
      "PersonPermissionsAuthorIdentifierType": {
        "enum": [
          "Nip",
          "Pesel",
          "Fingerprint"
        ],
        "type": "string"
      },
      "PersonPermissionsAuthorizedIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Nip",
              "Pesel",
              "Fingerprint"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonPermissionsAuthorizedIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator osoby lub podmiotu uprawnionego.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| Pesel | 11 cyfrowy numer PESEL |\r\n| Fingerprint | Odcisk palca certyfikatu |"
      },
      "PersonPermissionsAuthorizedIdentifierType": {
        "enum": [
          "Nip",
          "Pesel",
          "Fingerprint"
        ],
        "type": "string"
      },
      "PersonPermissionsGrantRequest": {
        "required": [
          "description",
          "permissions",
          "subjectIdentifier"
        ],
        "type": "object",
        "properties": {
          "subjectIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonPermissionsSubjectIdentifier"
              }
            ],
            "description": "Identyfikator osoby fizycznej.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| Pesel | 11 cyfrowy numer PESEL |\r\n| Fingerprint | Odcisk palca certyfikatu |"
          },
          "permissions": {
            "enum": [
              "CredentialsManage",
              "CredentialsRead",
              "InvoiceWrite",
              "InvoiceRead",
              "Introspection",
              "SubunitManage",
              "EnforcementOperations"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonPermissionType"
            },
            "description": "Lista nadawanych uprawnień. Każda wartość może wystąpić tylko raz."
          },
          "description": {
            "type": "string",
            "description": "Opis nadawanych uprawnień."
          }
        },
        "additionalProperties": false
      },
      "PersonPermissionsQueryRequest": {
        "required": [
          "queryType"
        ],
        "type": "object",
        "properties": {
          "authorIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonPermissionsAuthorIdentifier"
              }
            ],
            "description": "Identyfikator osoby lub podmiotu nadającego uprawnienie.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| Pesel | 11 cyfrowy numer PESEL |\r\n| Fingerprint | Odcisk palca certyfikatu |",
            "nullable": true
          },
          "authorizedIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonPermissionsAuthorizedIdentifier"
              }
            ],
            "description": "Identyfikator osoby lub podmiotu uprawnionego.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| Pesel | 11 cyfrowy numer PESEL |\r\n| Fingerprint | Odcisk palca certyfikatu |",
            "nullable": true
          },
          "targetIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonPermissionsTargetIdentifier"
              }
            ],
            "description": "Identyfikator podmiotu docelowego (dla uprawnień pośrednich).\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |",
            "nullable": true
          },
          "permissionTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonPermissionType"
            },
            "description": "Możliwe uprawnienia do filtrowania.",
            "nullable": true
          },
          "permissionState": {
            "enum": [
              "Active",
              "Inactive"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PermissionState"
              }
            ],
            "description": "Stan uprawnienia. \r\n| Type | Value |\r\n| --- | --- |\r\n| Active | Uprawnienia aktywne |\r\n| Inactive | Uprawnienia nieaktywne, nadane w sposób poœredni |",
            "nullable": true
          },
          "queryType": {
            "enum": [
              "PermissionsInCurrentContext",
              "PermissionsGrantedInCurrentContext"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonPermissionsQueryType"
              }
            ],
            "description": "Typ zapytania.\r\n| Type | Value |\r\n| --- | --- |\r\n| PermissionsInCurrentContext | Uprawnienia posiadane w aktualnym kontekście |\r\n| PermissionsGrantedInCurrentContext | Uprawnienia nadane w aktualnym kontekście |"
          }
        },
        "additionalProperties": false
      },
      "PersonPermissionsQueryType": {
        "enum": [
          "PermissionsInCurrentContext",
          "PermissionsGrantedInCurrentContext"
        ],
        "type": "string"
      },
      "PersonPermissionsSubjectIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Nip",
              "Pesel",
              "Fingerprint"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonPermissionsSubjectIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator osoby fizycznej.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| Pesel | 11 cyfrowy numer PESEL |\r\n| Fingerprint | Odcisk palca certyfikatu |"
      },
      "PersonPermissionsSubjectIdentifierType": {
        "enum": [
          "Nip",
          "Pesel",
          "Fingerprint"
        ],
        "type": "string"
      },
      "PersonPermissionsTargetIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonPermissionsTargetIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator podmiotu docelowego (dla uprawnień pośrednich).\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |"
      },
      "PersonPermissionsTargetIdentifierType": {
        "enum": [
          "Nip"
        ],
        "type": "string"
      },
      "PersonRemoveRequest": {
        "type": "object",
        "properties": {
          "nip": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PublicKeyCertificate": {
        "required": [
          "usage",
          "validFrom"
        ],
        "type": "object",
        "properties": {
          "certificatePem": {
            "type": "string",
            "description": "Certyfikat klucza publicznego w formacie PEM.",
            "nullable": true
          },
          "validFrom": {
            "type": "string",
            "description": "Data początku obowiązywania certyfikatu.",
            "format": "date-time"
          },
          "validTo": {
            "type": "string",
            "description": "Data końca obowiązywania certyfikatu.",
            "format": "date-time",
            "nullable": true
          },
          "usage": {
            "enum": [
              "KsefTokenEncryption",
              "SymmetricKeyEncryption"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicKeyCertificateUsage"
            },
            "description": "Operacje do których może być używany certyfikat.\r\n| Wartość | Opis |\r\n| --- | --- |\r\n| KsefTokenEncryption | Szyfrowanie tokenów KSeF przesyłanych w trakcie procesu uwierzytelniania. |\r\n| SymmetricKeyEncryption | Szyfrowanie klucza symetrycznego wykorzystywanego do szyfrowania przesyłanych faktur. |\r\n"
          }
        },
        "additionalProperties": false
      },
      "PublicKeyCertificateUsage": {
        "enum": [
          "KsefTokenEncryption",
          "SymmetricKeyEncryption"
        ],
        "type": "string",
        "description": "| Wartość | Opis |\r\n| --- | --- |\r\n| KsefTokenEncryption | Szyfrowanie tokenów KSeF przesyłanych w trakcie procesu uwierzytelniania. |\r\n| SymmetricKeyEncryption | Szyfrowanie klucza symetrycznego wykorzystywanego do szyfrowania przesyłanych faktur. |\r\n"
      },
      "QueryCertificatesRequest": {
        "type": "object",
        "properties": {
          "certificateSerialNumber": {
            "type": "string",
            "description": "Numer seryjny certyfikatu. Wyszukiwanie odbywa się na zasadzie dokładnego dopasowania (exact match).",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Nazwa własna certyfikatu. Wyszukiwanie jest częściowe, czyli zwracane są certyfikaty, których nazwa zawiera podany ciąg znaków (contains).",
            "nullable": true
          },
          "status": {
            "enum": [
              "Active",
              "Blocked",
              "Revoked",
              "Expired"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/CertificateListItemStatus"
              }
            ],
            "description": "Status certyfikatu.\r\n| Wartość | Opis |\r\n| --- | --- |\r\n| Active | Certyfikat jest aktywny i może zostać użyty do uwierzytelnienia. |\r\n| Blocked | Certyfikat został zablokowany i nie może zostać użyty do uwierzytelnienia.            Status przejściowy do czasu zakończenia procesu unieważniania. |\r\n| Revoked | Certyfikat został unieważniony i nie może zostać użyty do uwierzytelnienia. |\r\n| Expired | Certyfikat wygasł i nie może zostać użyty do uwierzytelnienia. |\r\n",
            "nullable": true
          },
          "expiresAfter": {
            "type": "string",
            "description": "Filtruje certyfikaty, które wygasają po podanej dacie.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryCertificatesResponse": {
        "required": [
          "certificates",
          "hasMore"
        ],
        "type": "object",
        "properties": {
          "certificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificateListItem"
            },
            "description": "Lista certyfikatów spełniających kryteria wyszukiwania."
          },
          "hasMore": {
            "type": "boolean",
            "description": "Flaga informująca o dostępności kolejnej strony wyników."
          }
        },
        "additionalProperties": false
      },
      "QueryEntityAuthorizationPermissionsResponse": {
        "type": "object",
        "properties": {
          "authorizationGrants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityAuthorizationGrant"
            },
            "description": "Lista uprawnień.",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "description": "Numer strony.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Rozmiar strony.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "QueryEntityRolesResponse": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityRole"
            },
            "description": "Lista ról.",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "description": "Numer strony.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Rozmiar strony.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "QueryEuEntityPermissionsResponse": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EuEntityPermission"
            },
            "description": "Lista uprawnień.",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "description": "Numer strony.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Rozmiar strony.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "QueryInvoicesReponse": {
        "required": [
          "invoices",
          "pageOffset",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "pageOffset": {
            "type": "integer",
            "description": "Indeks pierwszej strony wyników.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Liczba rekordów na stronie.",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "description": "Całkowita liczba pasujących rekordów w repozytorium.",
            "format": "int32"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceMetadata"
            },
            "description": "Lista faktur spełniających kryteria."
          }
        },
        "additionalProperties": false
      },
      "QueryPersonPermissionsResponse": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonPermission"
            },
            "description": "Lista uprawnień.",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "description": "Numer strony.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Rozmiar strony.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "QuerySubordinateEntityRolesResponse": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubordinateEntityRole"
            },
            "description": "Lista ról.",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "description": "Numer strony.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Rozmiar strony.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "QuerySubunitPermissionsResponse": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubunitPermission"
            },
            "description": "Lista uprawnień.",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "description": "Numer strony.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Rozmiar strony.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "QueryTokensResponse": {
        "required": [
          "tokens"
        ],
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Token służący do pobrania kolejnej strony wyników. Jeśli jest pusty, to nie ma kolejnych stron.",
            "nullable": true
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthenticationToken"
            },
            "description": "Lista tokenów uwierzytelniających."
          }
        },
        "additionalProperties": false
      },
      "QueryType": {
        "enum": [
          "Granted",
          "Received"
        ],
        "type": "string"
      },
      "RetrieveCertificatesListItem": {
        "required": [
          "certificate",
          "certificateName",
          "certificateSerialNumber"
        ],
        "type": "object",
        "properties": {
          "certificate": {
            "type": "string",
            "description": "Certyfikat w formacie DER.",
            "format": "byte"
          },
          "certificateName": {
            "type": "string",
            "description": "Nazwa własna certyfikatu."
          },
          "certificateSerialNumber": {
            "type": "string",
            "description": "Numer seryjny certyfikatu."
          }
        },
        "additionalProperties": false
      },
      "RetrieveCertificatesRequest": {
        "required": [
          "certificateSerialNumbers"
        ],
        "type": "object",
        "properties": {
          "certificateSerialNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Numery seryjne certyfikatów do pobrania."
          }
        },
        "additionalProperties": false
      },
      "RetrieveCertificatesResponse": {
        "required": [
          "certificates"
        ],
        "type": "object",
        "properties": {
          "certificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetrieveCertificatesListItem"
            },
            "description": "Pobrane certyfikaty."
          }
        },
        "additionalProperties": false
      },
      "RevokeCertificateRequest": {
        "type": "object",
        "properties": {
          "revocationReason": {
            "enum": [
              "Unspecified",
              "Superseded",
              "KeyCompromise"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/CertificateRevocationReason"
              }
            ],
            "description": "Powód unieważnienia certyfikatu.\r\n| Wartość | Opis |\r\n| --- | --- |\r\n| Unspecified | Nieokreślony. |\r\n| Superseded | Certyfikat został zastąpiony przez inny. |\r\n| KeyCompromise | Klucz prywatny powiązany z certyfikatem został skompromitowany. |\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendInvoiceRequest": {
        "required": [
          "encryptedInvoiceContent",
          "encryptedInvoiceHash",
          "encryptedInvoiceSize",
          "invoiceHash",
          "invoiceSize"
        ],
        "type": "object",
        "properties": {
          "invoiceHash": {
            "type": "string",
            "description": "Skrót SHA256 oryginalnej faktury, zakodowany w formacie Base64."
          },
          "invoiceSize": {
            "type": "integer",
            "description": "Rozmiar oryginalnej faktury w bajtach.",
            "format": "int64"
          },
          "encryptedInvoiceHash": {
            "type": "string",
            "description": "Skrót SHA256 zaszyfrowanej faktury, zakodowany w formacie Base64."
          },
          "encryptedInvoiceSize": {
            "type": "integer",
            "description": "Rozmiar zaszyfrowanej faktury w bajtach.",
            "format": "int64"
          },
          "encryptedInvoiceContent": {
            "type": "string",
            "description": "Faktura zaszyfrowana algorytmem AES-256-CBC z dopełnianiem PKCS#7 (kluczem przekazanym przy otwarciu sesji), zakodowana w formacie Base64."
          },
          "offlineMode": {
            "type": "boolean",
            "description": "Określa, czy podatnik deklaruje tryb fakturowania \"offline\" dla przesyłanego dokumentu.",
            "default": false
          },
          "hashOfCorrectedInvoice": {
            "type": "string",
            "description": "Skrót SHA256 korygowanej faktury, zakodowany w formacie Base64. Wymagany przy wysyłaniu korekty technicznej faktury.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendInvoiceResponse": {
        "required": [
          "referenceNumber"
        ],
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "Numer referencyjny faktury."
          }
        },
        "additionalProperties": false
      },
      "SessionInvoice": {
        "required": [
          "ordinalNumber",
          "receiveDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "ordinalNumber": {
            "type": "integer",
            "description": "Numer sekwencyjny faktury w ramach sesji.",
            "format": "int32"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Numer faktury.",
            "nullable": true
          },
          "ksefNumber": {
            "type": "string",
            "description": "Numer KSeF.",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "description": "Numer referencyjny faktury.",
            "nullable": true
          },
          "invoiceHash": {
            "type": "string",
            "description": "Skrót SHA256 faktury, zakodowany w formacie Base64.",
            "nullable": true
          },
          "invoiceFileName": {
            "type": "string",
            "description": "Nazwa pliku faktury (zwracana dla faktur wysyłanych wsadowo).",
            "nullable": true
          },
          "receiveDate": {
            "type": "string",
            "description": "Data przyjęcia faktury.",
            "format": "date-time"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusInfo"
              }
            ],
            "description": "Status faktury.\r\n\r\n| Code | Description | Details |\r\n| --- | --- | --- |\r\n| 100 | Dokument faktury przyjęty | - |\r\n| 200 | Sukces | - |\r\n| 300 | Trwa przetwarzanie | - |\r\n| 410 | Nieprawidłowy zakres uprawnień | - |\r\n| 430 | Błąd weryfikacji pliku faktury | - |\r\n| 435 | Błąd odszyfrowania pliku | - |\r\n| 440 | Duplikat faktury | - |\r\n| 450 | Błąd weryfikacji semantyki dokumentu faktury | - |\r\n| 500 | Nieznany błąd ({statusCode}) | - |"
          }
        },
        "additionalProperties": false
      },
      "SessionInvoicesResponse": {
        "required": [
          "invoices"
        ],
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "nullable": true
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionInvoice"
            },
            "description": "Lista pobranych faktur."
          },
          "totalCount": {
            "type": "integer",
            "description": "Całkowita liczba faktur.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SessionStatusResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusInfo"
              }
            ],
            "description": "Informacje o aktualnym statusie.\r\n            \r\nSesja wsadowa:\r\n| Code | Description | Details |\r\n| --- | --- | --- |\r\n| 100 | Sesja wsadowa rozpoczęta | - |\r\n| 200 | Sesja wsadowa przetworzona pomyślnie | - |\r\n| 300 | Trwa przetwarzanie | - |\r\n| 405 | Błąd weryfikacji poprawności dostarczonych elementów paczki | - |\r\n| 415 | Błąd odszyfrowania dostarczonego klucza | - |\r\n| 430 | Błąd dekompresji pierwotnego archiwum | - |\r\n| 435 | Błąd odszyfrowania zaszyfrowanych części archiwum | - |\r\n| 500 | Nieznany błąd ({statusCode}) | - |\r\n\r\nSesja interaktywna:\r\n| Code | Description | Details |\r\n| --- | --- | --- |\r\n| 100 | Sesja interaktywna otwarta | - |\r\n| 200 | Sesja interaktywna przetworzona pomyślnie | - |\r\n| 300 | Sesja interaktywna zamknięta | - |\r\n| 415 | Błąd odszyfrowania dostarczonego klucza | - |\r\n| * | description missing | - |"
          },
          "upo": {
            "required": [
              "pages"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/UpoResponse"
              }
            ],
            "description": "Informacja o UPO sesyjnym, zwracana gdy sesja została zamknięta i UPO zostało wygenerowane.",
            "nullable": true
          },
          "invoiceCount": {
            "type": "integer",
            "description": "Ilość przyjętych faktur w ramach sesji.",
            "format": "int32",
            "nullable": true
          },
          "successfulInvoiceCount": {
            "type": "integer",
            "description": "Ilość faktur przeprocesowanych w ramach sesji z sukcesem .",
            "format": "int32",
            "nullable": true
          },
          "failedInvoiceCount": {
            "type": "integer",
            "description": "Ilość faktur przeprocesowanych w ramach sesji z błędem.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SessionType": {
        "enum": [
          "Online",
          "Batch"
        ],
        "type": "string",
        "description": "| Wartość | Opis |\r\n| --- | --- |\r\n| Online | Wysyłka interaktywna (pojedyncze faktury). |\r\n| Batch | Wysyłka wsadowa (paczka faktur). |\r\n"
      },
      "SessionsQueryResponse": {
        "required": [
          "sessions"
        ],
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Token służący do pobrania kolejnej strony wyników. Jeśli jest pusty, to nie ma kolejnych stron.",
            "nullable": true
          },
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionsQueryResponseItem"
            },
            "description": "Lista sesji."
          }
        },
        "additionalProperties": false
      },
      "SessionsQueryResponseItem": {
        "required": [
          "dateCreated",
          "dateUpdated",
          "failedInvoiceCount",
          "referenceNumber",
          "status",
          "successfulInvoiceCount",
          "totalInvoiceCount"
        ],
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "Numer referencyjny sesji."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusInfo"
              }
            ],
            "description": "Status sesji."
          },
          "dateCreated": {
            "type": "string",
            "description": "Data utowrzenia sesji.",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "description": "Data ostatniej aktywności w ramach sesji.",
            "format": "date-time"
          },
          "totalInvoiceCount": {
            "type": "integer",
            "description": "Łączna liczba faktur (uwzględnia również te w trakcie przetwarzania).",
            "format": "int32"
          },
          "successfulInvoiceCount": {
            "type": "integer",
            "description": "Liczba poprawnie przetworzonych faktur.",
            "format": "int32"
          },
          "failedInvoiceCount": {
            "type": "integer",
            "description": "Liczba błędnie przetworzonych faktur.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StatusInfo": {
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Kod statusu",
            "format": "int32"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Opis statusu"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Dodatkowe szczegóły statusu",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubjectCreateRequest": {
        "type": "object",
        "properties": {
          "subjectNip": {
            "type": "string",
            "nullable": true
          },
          "subjectType": {
            "enum": [
              "EnforcementAuthority",
              "VatGroup",
              "JST"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SubjectType"
              }
            ]
          },
          "subunits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subunit"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubjectIdentifier": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "None",
              "Nip",
              "Pesel",
              "Fingerprint",
              "Token"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SubjectIdentifierType"
              }
            ]
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubjectIdentifierType": {
        "enum": [
          "None",
          "Nip",
          "Pesel",
          "Fingerprint",
          "Token"
        ],
        "type": "string"
      },
      "SubjectRemoveRequest": {
        "type": "object",
        "properties": {
          "subjectNip": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubjectType": {
        "enum": [
          "EnforcementAuthority",
          "VatGroup",
          "JST"
        ],
        "type": "string"
      },
      "SubordinateEntityRole": {
        "type": "object",
        "properties": {
          "subordinateEntityIdentifier": {
            "type": "string",
            "description": "Identyfikator podmiotu podrzędnego.",
            "nullable": true
          },
          "subordinateEntityIdentifierType": {
            "enum": [
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SubordinateRoleSubordinateEntityIdentifierType"
              }
            ],
            "description": "Typ identyfikatora podmiotu podrzędnego."
          },
          "role": {
            "enum": [
              "LocalGovernmentSubUnit",
              "VatGroupSubUnit"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SubordinateEntityRoleType"
              }
            ],
            "description": "Powiązanie."
          },
          "description": {
            "type": "string",
            "description": "Opis.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Data rozpoczęcia obowiązywania powiązania.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SubordinateEntityRoleType": {
        "enum": [
          "LocalGovernmentSubUnit",
          "VatGroupSubUnit"
        ],
        "type": "string"
      },
      "SubordinateEntityRolesQueryRequest": {
        "type": "object",
        "properties": {
          "subordinateEntityIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityPermissionsSubordinateEntityIdentifier"
              }
            ],
            "description": "Identyfikator podmiotu podrzędnego.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubordinateRoleSubordinateEntityIdentifierType": {
        "enum": [
          "Nip"
        ],
        "type": "string"
      },
      "Subunit": {
        "type": "object",
        "properties": {
          "subjectNip": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubunitPermission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identyfikator uprawnienia.",
            "nullable": true
          },
          "authorizedIdentifier": {
            "type": "string",
            "description": "Identyfikator uprawnionego.",
            "nullable": true
          },
          "authorizedIdentifierType": {
            "enum": [
              "Nip",
              "Pesel",
              "Fingerprint"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SubunitPermissionsSubjectIdentifierType"
              }
            ],
            "description": "Typ identyfikatora uprawnionego."
          },
          "subunitIdentifier": {
            "type": "string",
            "description": "Identyfikator podmiotu podrzędnego.",
            "nullable": true
          },
          "subunitIdentifierType": {
            "enum": [
              "InternalId",
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SubunitPermissionsSubunitIdentifierType"
              }
            ],
            "description": "Typ identyfikatora podmiotu podrzędnego."
          },
          "authorIdentifier": {
            "type": "string",
            "description": "Identyfikator uprawniającego.",
            "nullable": true
          },
          "authorIdentifierType": {
            "enum": [
              "Nip",
              "Pesel",
              "Fingerprint"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SubunitPermissionsAuthorIdentifierType"
              }
            ],
            "description": "Typ identyfikatora uprawniającego."
          },
          "permissionScope": {
            "enum": [
              "CredentialsManage"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SubunitPermissionScope"
              }
            ],
            "description": "Uprawnienie."
          },
          "description": {
            "type": "string",
            "description": "Opis uprawnienia.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Data rozpoczęcia obowiązywania uprawnienia.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SubunitPermissionScope": {
        "enum": [
          "CredentialsManage"
        ],
        "type": "string"
      },
      "SubunitPermissionsAuthorIdentifierType": {
        "enum": [
          "Nip",
          "Pesel",
          "Fingerprint"
        ],
        "type": "string"
      },
      "SubunitPermissionsContextIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "InternalId",
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SubunitPermissionsContextIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator podmiotu podrzędnego.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| InternalId | Dwuczłonowy identyfikator składający się z numeru NIP i 5 cyfr: `{nip}-{5_cyfr}` |"
      },
      "SubunitPermissionsContextIdentifierType": {
        "enum": [
          "InternalId",
          "Nip"
        ],
        "type": "string"
      },
      "SubunitPermissionsGrantRequest": {
        "required": [
          "contextIdentifier",
          "description",
          "subjectIdentifier"
        ],
        "type": "object",
        "properties": {
          "subjectIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SubunitPermissionsSubjectIdentifier"
              }
            ],
            "description": "Identyfikator podmiotu lub osoby fizycznej.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| Pesel | 11 cyfrowy numer PESEL |\r\n| Fingerprint | Odcisk palca certyfikatu |"
          },
          "contextIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SubunitPermissionsContextIdentifier"
              }
            ],
            "description": "Identyfikator podmiotu podrzędnego.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| InternalId | Dwuczłonowy identyfikator składający się z numeru NIP i 5 cyfr: `{nip}-{5_cyfr}` |"
          },
          "description": {
            "type": "string",
            "description": "Opis nadawanych uprawnień."
          }
        },
        "additionalProperties": false
      },
      "SubunitPermissionsQueryRequest": {
        "type": "object",
        "properties": {
          "subunitIdentifier": {
            "required": [
              "type",
              "value"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SubunitPermissionsSubunitIdentifier"
              }
            ],
            "description": "Identyfikator jednostki lub podmiotu podrzędnego.\r\n| Type | Value |\r\n| --- | --- |\r\n| InternalId | Dwuczłonowy identyfikator składający się z numeru NIP i 5 cyfr: `{nip}-{5_cyfr}` |\r\n| Nip | 10 cyfrowy numer NIP |",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubunitPermissionsSubjectIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Nip",
              "Pesel",
              "Fingerprint"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SubunitPermissionsSubjectIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator podmiotu lub osoby fizycznej.\r\n| Type | Value |\r\n| --- | --- |\r\n| Nip | 10 cyfrowy numer NIP |\r\n| Pesel | 11 cyfrowy numer PESEL |\r\n| Fingerprint | Odcisk palca certyfikatu |"
      },
      "SubunitPermissionsSubjectIdentifierType": {
        "enum": [
          "Nip",
          "Pesel",
          "Fingerprint"
        ],
        "type": "string"
      },
      "SubunitPermissionsSubunitIdentifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "InternalId",
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SubunitPermissionsSubunitIdentifierType"
              }
            ],
            "description": "Typ identyfikatora."
          },
          "value": {
            "type": "string",
            "description": "Wartość identyfikatora."
          }
        },
        "additionalProperties": false,
        "description": "Identyfikator jednostki lub podmiotu podrzędnego.\r\n| Type | Value |\r\n| --- | --- |\r\n| InternalId | Dwuczłonowy identyfikator składający się z numeru NIP i 5 cyfr: `{nip}-{5_cyfr}` |\r\n| Nip | 10 cyfrowy numer NIP |"
      },
      "SubunitPermissionsSubunitIdentifierType": {
        "enum": [
          "InternalId",
          "Nip"
        ],
        "type": "string"
      },
      "TestDataAuthorizedIdentifier": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Nip",
              "Pesel",
              "Fingerprint"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/TestDataAuthorizedIdentifierType"
              }
            ]
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TestDataAuthorizedIdentifierType": {
        "enum": [
          "Nip",
          "Pesel",
          "Fingerprint"
        ],
        "type": "string"
      },
      "TestDataContextIdentifier": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Nip"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/TestDataContextIdentifierType"
              }
            ]
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TestDataContextIdentifierType": {
        "enum": [
          "Nip"
        ],
        "type": "string"
      },
      "TestDataPermission": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "permissionType": {
            "enum": [
              "InvoiceRead",
              "InvoiceWrite",
              "Introspection",
              "CredentialsRead",
              "CredentialsManage",
              "EnforcementOperations",
              "SubunitManage"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/TestDataPermissionType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "TestDataPermissionType": {
        "enum": [
          "InvoiceRead",
          "InvoiceWrite",
          "Introspection",
          "CredentialsRead",
          "CredentialsManage",
          "EnforcementOperations",
          "SubunitManage"
        ],
        "type": "string"
      },
      "TestDataPermissionsGrantRequest": {
        "type": "object",
        "properties": {
          "contextIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TestDataContextIdentifier"
              }
            ],
            "nullable": true
          },
          "authorizedIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TestDataAuthorizedIdentifier"
              }
            ],
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestDataPermission"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TestDataPermissionsRevokeRequest": {
        "type": "object",
        "properties": {
          "contextIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TestDataContextIdentifier"
              }
            ],
            "nullable": true
          },
          "authorizedIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TestDataAuthorizedIdentifier"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenInfo": {
        "required": [
          "token",
          "validUntil"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token w formacie JWT."
          },
          "validUntil": {
            "type": "string",
            "description": "Data ważności tokena.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TokenPermissionType": {
        "enum": [
          "InvoiceRead",
          "InvoiceWrite",
          "CredentialsRead",
          "CredentialsManage"
        ],
        "type": "string"
      },
      "UpoPageResponse": {
        "required": [
          "downloadUrl",
          "referenceNumber"
        ],
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "Numer referencyjny strony UPO."
          },
          "downloadUrl": {
            "type": "string",
            "description": "Adres do pobrania strony UPO.",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "UpoResponse": {
        "required": [
          "pages"
        ],
        "type": "object",
        "properties": {
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpoPageResponse"
            },
            "description": "Lista stron UPO."
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Token dostępu uzyskany w wyniku operacji uwierzytelnienia.",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      },
      "SessionToken": {
        "type": "apiKey",
        "name": "SessionToken",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Uzyskiwanie dostępu",
      "description": "Uwierzytelnianie w systemie KSeF API 2.0 jest obowiązkowym etapem, który należy wykonać przed dostępem do chronionych zasobów systemu. Proces ten oparty jest na **uzyskaniu tokenu dostępu** (```accessToken```) w formacie ```JWT```, który następnie wykorzystywany jest do autoryzacji operacji API.\r\n\r\n> Więcej informacji:\r\n> - [Uwierzytelnianie](https://github.com/CIRFMF/ksef-docs/blob/main/uwierzytelnianie.md)"
    },
    {
      "name": "Aktywne sesje"
    },
    {
      "name": "Certyfikaty klucza publicznego"
    },
    {
      "name": "Wysyłka interaktywna"
    },
    {
      "name": "Wysyłka wsadowa",
      "description": ""
    },
    {
      "name": "Status wysyłki i UPO"
    },
    {
      "name": "Pobieranie faktur"
    },
    {
      "name": "Nadawanie uprawnień"
    },
    {
      "name": "Odbieranie uprawnień"
    },
    {
      "name": "Wyszukiwanie nadanych uprawnień"
    },
    {
      "name": "Operacje"
    },
    {
      "name": "Certyfikaty",
      "description": "Certyfikat KSeF to cyfrowe poświadczenie tożsamości podmiotu, wydawane przez system KSeF na wniosek uwierzytelnionego podmiotu. \r\nCertyfikat ten może być wykorzystywany do:\r\n\r\n- uwierzytelniania się w systemie KSeF,\r\n- realizacji operacji w trybie offline, w tym wystawiania faktur bezpośrednio w aplikacji użytkownika.\r\n\r\n**Uwaga**: Wnioskowanie o certyfikat KSeF jest możliwe wyłącznie po uwierzytelnieniu z wykorzystaniem podpisu (XAdES). Uwierzytelnienie przy użyciu tokenu systemowego KSeF nie pozwala na złożenie wniosku."
    },
    {
      "name": "Tokeny KSeF",
      "description": "Token KSeF to unikalny, generowany identyfikator uwierzytelniający, który — na równi z [kwalifikowanym podpisem elektronicznym](https://github.com/CIRFMF/ksef-docs/blob/main/uwierzytelnianie.md#21-uwierzytelnianie-kwalifikowanym-podpisem-elektronicznym) — umożliwia [uwierzytelnienie](https://github.com/CIRFMF/ksef-docs/blob/main/uwierzytelnianie.md#22-uwierzytelnianie-tokenem-ksef) się do API KSeF.\r\n\r\nToken KSeF jest wydawany z niezmiennym zestawem uprawnień określonych przy jego tworzeniu; każda modyfikacja tych uprawnień wymaga wygenerowania nowego tokena.\r\n> **Uwaga!** <br>\r\n> Token KSeF pełni rolę **poufnego sekretu** uwierzytelniającego — należy przechowywać go wyłącznie w zaufanym i bezpiecznym magazynie.\r\n\r\nWięcej informacji:\r\n- [Token KSeF](https://github.com/CIRFMF/ksef-docs/blob/main/tokeny-ksef.md)\r\n"
    },
    {
      "name": "Dane testowe",
      "description": "API służy do tworzenia i zarządzania danymi testowymi, takimi jak podmioty, osoby fizyczne oraz uprawnienia. Możliwe do utworzenia podmioty to: organ egzekucyjny, grupa VAT oraz jednostki samorządu terytorialnego. W przypadku osób fizycznych można określić, czy dana osoba jest komornikiem. Funkcjonalność nadawania i odbierania uprawnień ma na celu odwzorowanie działania formularza ZAW-FA w środowisku testowym.\r\n\r\nWięcej informacji:\r\n- [Scenariusze testowe](https://github.com/CIRFMF/ksef-docs/blob/main/dane-testowe-scenariusze.md)"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Uwierzytelnianie",
      "tags": [
        "Uzyskiwanie dostępu",
        "Aktywne sesje"
      ]
    },
    {
      "name": "Szyfrowanie danych",
      "tags": [
        "Certyfikaty klucza publicznego"
      ]
    },
    {
      "name": "Faktury",
      "tags": [
        "Wysyłka interaktywna",
        "Wysyłka wsadowa",
        "Status wysyłki i UPO",
        "Pobieranie faktur"
      ]
    },
    {
      "name": "Uprawnienia",
      "tags": [
        "Nadawanie uprawnień",
        "Odbieranie uprawnień",
        "Wyszukiwanie nadanych uprawnień",
        "Operacje"
      ]
    },
    {
      "name": "Certyfikaty",
      "tags": [
        "Certyfikaty"
      ]
    },
    {
      "name": "Tokeny KSeF",
      "tags": [
        "Tokeny KSeF"
      ]
    },
    {
      "name": "Dane testowe",
      "tags": [
        "Dane testowe"
      ]
    }
  ]
}