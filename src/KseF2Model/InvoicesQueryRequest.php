<?php
/**
 * InvoicesQueryRequest
 *
 * PHP version 8.1
 *
 * @package  NetSeven
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * KSeF API TE
 *
 * **Wersja API:** 2.0.0 (build 2.0.0-rc2-te-20250725.2+5adfde843e2c34f7d63e9a50dccbb9dab79bc320)<br>  **Klucze publiczne** Ministerstwa Finansów (dla danego środowiska): [Pobierz klucze](#tag/Certyfikaty-klucza-publicznego)<br>  **Historia zmian:** [Changelog](#)<br>  **Rozszerzona dokumentacja API:** [ksef-docs](https://github.com/CIRFMF/ksef-docs/tree/main)
 *
 * The version of the OpenAPI document: v2
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace NetSeven\KseF2Model;

use ArrayAccess;
use JsonSerializable;
use InvalidArgumentException;
use ReturnTypeWillChange;
use NetSeven\ObjectSerializer;

/**
 * InvoicesQueryRequest Class Doc Comment
 *
 * @package  NetSeven
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements ArrayAccess<string, mixed>
 */
class InvoicesQueryRequest implements ModelInterface, ArrayAccess, JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static string $openAPIModelName = 'InvoicesQueryRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var array<string, string>
      */
    protected static array $openAPITypes = [
        'subject_type' => '\NetSeven\KseF2Model\InvoiceQuerySubjectType',
        'date_range' => '\NetSeven\KseF2Model\InvoiceQueryDateRange',
        'ksef_number' => 'string',
        'invoice_number' => 'string',
        'amount' => '\NetSeven\KseF2Model\InvoiceQueryAmount',
        'seller' => '\NetSeven\KseF2Model\InvoiceQuerySeller',
        'buyer' => '\NetSeven\KseF2Model\InvoiceQueryBuyer',
        'currency_codes' => '\NetSeven\KseF2Model\CurrencyCode[]',
        'is_hidden' => 'bool',
        'invoicing_mode' => '\NetSeven\KseF2Model\InvoicingMode',
        'is_self_invoicing' => 'bool',
        'invoice_schema' => '\NetSeven\KseF2Model\InvoiceMetadataSchema',
        'invoice_types' => '\NetSeven\KseF2Model\InvoiceMetadataInvoiceType[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var array<string, string|null>
      */
    protected static array $openAPIFormats = [
        'subject_type' => null,
        'date_range' => null,
        'ksef_number' => null,
        'invoice_number' => null,
        'amount' => null,
        'seller' => null,
        'buyer' => null,
        'currency_codes' => null,
        'is_hidden' => null,
        'invoicing_mode' => null,
        'is_self_invoicing' => null,
        'invoice_schema' => null,
        'invoice_types' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var array<string, bool>
      */
    protected static array $openAPINullables = [
        'subject_type' => false,
        'date_range' => false,
        'ksef_number' => true,
        'invoice_number' => true,
        'amount' => true,
        'seller' => true,
        'buyer' => true,
        'currency_codes' => true,
        'is_hidden' => true,
        'invoicing_mode' => true,
        'is_self_invoicing' => true,
        'invoice_schema' => true,
        'invoice_types' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var array<string, bool>
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array<string, string>
     */
    public static function openAPITypes(): array
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array<string, string>
     */
    public static function openAPIFormats(): array
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array<string, bool>
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return array<string, bool>
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param array<string, bool> $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var array<string, string>
     */
    protected static array $attributeMap = [
        'subject_type' => 'subjectType',
        'date_range' => 'dateRange',
        'ksef_number' => 'ksefNumber',
        'invoice_number' => 'invoiceNumber',
        'amount' => 'amount',
        'seller' => 'seller',
        'buyer' => 'buyer',
        'currency_codes' => 'currencyCodes',
        'is_hidden' => 'isHidden',
        'invoicing_mode' => 'invoicingMode',
        'is_self_invoicing' => 'isSelfInvoicing',
        'invoice_schema' => 'invoiceSchema',
        'invoice_types' => 'invoiceTypes'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var array<string, string>
     */
    protected static array $setters = [
        'subject_type' => 'setSubjectType',
        'date_range' => 'setDateRange',
        'ksef_number' => 'setKsefNumber',
        'invoice_number' => 'setInvoiceNumber',
        'amount' => 'setAmount',
        'seller' => 'setSeller',
        'buyer' => 'setBuyer',
        'currency_codes' => 'setCurrencyCodes',
        'is_hidden' => 'setIsHidden',
        'invoicing_mode' => 'setInvoicingMode',
        'is_self_invoicing' => 'setIsSelfInvoicing',
        'invoice_schema' => 'setInvoiceSchema',
        'invoice_types' => 'setInvoiceTypes'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var array<string, string>
     */
    protected static array $getters = [
        'subject_type' => 'getSubjectType',
        'date_range' => 'getDateRange',
        'ksef_number' => 'getKsefNumber',
        'invoice_number' => 'getInvoiceNumber',
        'amount' => 'getAmount',
        'seller' => 'getSeller',
        'buyer' => 'getBuyer',
        'currency_codes' => 'getCurrencyCodes',
        'is_hidden' => 'getIsHidden',
        'invoicing_mode' => 'getInvoicingMode',
        'is_self_invoicing' => 'getIsSelfInvoicing',
        'invoice_schema' => 'getInvoiceSchema',
        'invoice_types' => 'getInvoiceTypes'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array<string, string>
     */
    public static function attributeMap(): array
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array<string, string>
     */
    public static function setters(): array
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array<string, string>
     */
    public static function getters(): array
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName(): string
    {
        return self::$openAPIModelName;
    }


    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public static function getCurrencyCodesAllowableValues()
    {
        return [
            
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public static function getInvoiceTypesAllowableValues()
    {
        return [
            
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var array
     */
    protected array $container = [];

    /**
     * Constructor
     *
     * @param array $data Associated array of property values initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('subject_type', $data ?? [], null);
        $this->setIfExists('date_range', $data ?? [], null);
        $this->setIfExists('ksef_number', $data ?? [], null);
        $this->setIfExists('invoice_number', $data ?? [], null);
        $this->setIfExists('amount', $data ?? [], null);
        $this->setIfExists('seller', $data ?? [], null);
        $this->setIfExists('buyer', $data ?? [], null);
        $this->setIfExists('currency_codes', $data ?? [], null);
        $this->setIfExists('is_hidden', $data ?? [], null);
        $this->setIfExists('invoicing_mode', $data ?? [], null);
        $this->setIfExists('is_self_invoicing', $data ?? [], null);
        $this->setIfExists('invoice_schema', $data ?? [], null);
        $this->setIfExists('invoice_types', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, mixed $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return string[] invalid properties with reasons
     */
    public function listInvalidProperties(): array
    {
        $invalidProperties = [];

        if ($this->container['subject_type'] === null) {
            $invalidProperties[] = "'subject_type' can't be null";
        }
        if ($this->container['date_range'] === null) {
            $invalidProperties[] = "'date_range' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid(): bool
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets subject_type
     *
     * @return \NetSeven\KseF2Model\InvoiceQuerySubjectType
     */
    public function getSubjectType(): \NetSeven\KseF2Model\InvoiceQuerySubjectType
    {
        return $this->container['subject_type'];
    }

    /**
     * Sets subject_type
     *
     * @param \NetSeven\KseF2Model\InvoiceQuerySubjectType $subject_type Typ podmiotu, którego dotyczą kryteria filtrowania metadanych faktur.  Określa kontekst, w jakim przeszukiwane są dane.
     *
     * @return $this
     */
    public function setSubjectType(\NetSeven\KseF2Model\InvoiceQuerySubjectType $subject_type): static
    {
        if (is_null($subject_type)) {
            throw new InvalidArgumentException('non-nullable subject_type cannot be null');
        }
        $this->container['subject_type'] = $subject_type;

        return $this;
    }

    /**
     * Gets date_range
     *
     * @return \NetSeven\KseF2Model\InvoiceQueryDateRange
     */
    public function getDateRange(): \NetSeven\KseF2Model\InvoiceQueryDateRange
    {
        return $this->container['date_range'];
    }

    /**
     * Sets date_range
     *
     * @param \NetSeven\KseF2Model\InvoiceQueryDateRange $date_range Typ i zakres dat, według którego mają być filtrowane faktury.
     *
     * @return $this
     */
    public function setDateRange(\NetSeven\KseF2Model\InvoiceQueryDateRange $date_range): static
    {
        if (is_null($date_range)) {
            throw new InvalidArgumentException('non-nullable date_range cannot be null');
        }
        $this->container['date_range'] = $date_range;

        return $this;
    }

    /**
     * Gets ksef_number
     *
     * @return string|null
     */
    public function getKsefNumber(): ?string
    {
        return $this->container['ksef_number'];
    }

    /**
     * Sets ksef_number
     *
     * @param string|null $ksef_number Numer KSeF faktury.
     *
     * @return $this
     */
    public function setKsefNumber(?string $ksef_number): static
    {
        if (is_null($ksef_number)) {
            array_push($this->openAPINullablesSetToNull, 'ksef_number');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ksef_number', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['ksef_number'] = $ksef_number;

        return $this;
    }

    /**
     * Gets invoice_number
     *
     * @return string|null
     */
    public function getInvoiceNumber(): ?string
    {
        return $this->container['invoice_number'];
    }

    /**
     * Sets invoice_number
     *
     * @param string|null $invoice_number Numer faktury nadany przez wystawcę.
     *
     * @return $this
     */
    public function setInvoiceNumber(?string $invoice_number): static
    {
        if (is_null($invoice_number)) {
            array_push($this->openAPINullablesSetToNull, 'invoice_number');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('invoice_number', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['invoice_number'] = $invoice_number;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return \NetSeven\KseF2Model\InvoiceQueryAmount|null
     */
    public function getAmount(): ?\NetSeven\KseF2Model\InvoiceQueryAmount
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param \NetSeven\KseF2Model\InvoiceQueryAmount|null $amount Filtr kwotowy – brutto, netto lub VAT (z wartością).
     *
     * @return $this
     */
    public function setAmount(?\NetSeven\KseF2Model\InvoiceQueryAmount $amount): static
    {
        if (is_null($amount)) {
            array_push($this->openAPINullablesSetToNull, 'amount');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('amount', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets seller
     *
     * @return \NetSeven\KseF2Model\InvoiceQuerySeller|null
     */
    public function getSeller(): ?\NetSeven\KseF2Model\InvoiceQuerySeller
    {
        return $this->container['seller'];
    }

    /**
     * Sets seller
     *
     * @param \NetSeven\KseF2Model\InvoiceQuerySeller|null $seller Dane sprzedawcy.
     *
     * @return $this
     */
    public function setSeller(?\NetSeven\KseF2Model\InvoiceQuerySeller $seller): static
    {
        if (is_null($seller)) {
            array_push($this->openAPINullablesSetToNull, 'seller');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('seller', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['seller'] = $seller;

        return $this;
    }

    /**
     * Gets buyer
     *
     * @return \NetSeven\KseF2Model\InvoiceQueryBuyer|null
     */
    public function getBuyer(): ?\NetSeven\KseF2Model\InvoiceQueryBuyer
    {
        return $this->container['buyer'];
    }

    /**
     * Sets buyer
     *
     * @param \NetSeven\KseF2Model\InvoiceQueryBuyer|null $buyer Dane nabywcy.
     *
     * @return $this
     */
    public function setBuyer(?\NetSeven\KseF2Model\InvoiceQueryBuyer $buyer): static
    {
        if (is_null($buyer)) {
            array_push($this->openAPINullablesSetToNull, 'buyer');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('buyer', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['buyer'] = $buyer;

        return $this;
    }

    /**
     * Gets currency_codes
     *
     * @return \NetSeven\KseF2Model\CurrencyCode[]|null
     */
    public function getCurrencyCodes(): ?array
    {
        return $this->container['currency_codes'];
    }

    /**
     * Sets currency_codes
     *
     * @param \NetSeven\KseF2Model\CurrencyCode[]|null $currency_codes Kody walut.
     *
     * @return $this
     */
    public function setCurrencyCodes(?array $currency_codes): static
    {
        if (is_null($currency_codes)) {
            array_push($this->openAPINullablesSetToNull, 'currency_codes');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('currency_codes', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $allowedValues = self::getCurrencyCodesAllowableValues();
        if (!is_null($currency_codes) && array_diff($currency_codes, $allowedValues)) {
            throw new InvalidArgumentException(
                sprintf(
                    "Invalid value for 'currency_codes', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['currency_codes'] = $currency_codes;

        return $this;
    }

    /**
     * Gets is_hidden
     *
     * @return bool|null
     */
    public function getIsHidden(): ?bool
    {
        return $this->container['is_hidden'];
    }

    /**
     * Sets is_hidden
     *
     * @param bool|null $is_hidden Czy faktura została oznaczona jako ukryta.
     *
     * @return $this
     */
    public function setIsHidden(?bool $is_hidden): static
    {
        if (is_null($is_hidden)) {
            array_push($this->openAPINullablesSetToNull, 'is_hidden');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('is_hidden', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['is_hidden'] = $is_hidden;

        return $this;
    }

    /**
     * Gets invoicing_mode
     *
     * @return \NetSeven\KseF2Model\InvoicingMode|null
     */
    public function getInvoicingMode(): ?\NetSeven\KseF2Model\InvoicingMode
    {
        return $this->container['invoicing_mode'];
    }

    /**
     * Sets invoicing_mode
     *
     * @param \NetSeven\KseF2Model\InvoicingMode|null $invoicing_mode Tryb wystawienia faktury: online lub offline.
     *
     * @return $this
     */
    public function setInvoicingMode(?\NetSeven\KseF2Model\InvoicingMode $invoicing_mode): static
    {
        if (is_null($invoicing_mode)) {
            array_push($this->openAPINullablesSetToNull, 'invoicing_mode');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('invoicing_mode', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['invoicing_mode'] = $invoicing_mode;

        return $this;
    }

    /**
     * Gets is_self_invoicing
     *
     * @return bool|null
     */
    public function getIsSelfInvoicing(): ?bool
    {
        return $this->container['is_self_invoicing'];
    }

    /**
     * Sets is_self_invoicing
     *
     * @param bool|null $is_self_invoicing Czy faktura została wystawiona w trybie samofakturowania.
     *
     * @return $this
     */
    public function setIsSelfInvoicing(?bool $is_self_invoicing): static
    {
        if (is_null($is_self_invoicing)) {
            array_push($this->openAPINullablesSetToNull, 'is_self_invoicing');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('is_self_invoicing', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['is_self_invoicing'] = $is_self_invoicing;

        return $this;
    }

    /**
     * Gets invoice_schema
     *
     * @return \NetSeven\KseF2Model\InvoiceMetadataSchema|null
     */
    public function getInvoiceSchema(): ?\NetSeven\KseF2Model\InvoiceMetadataSchema
    {
        return $this->container['invoice_schema'];
    }

    /**
     * Sets invoice_schema
     *
     * @param \NetSeven\KseF2Model\InvoiceMetadataSchema|null $invoice_schema Typ schematu dokumentu.
     *
     * @return $this
     */
    public function setInvoiceSchema(?\NetSeven\KseF2Model\InvoiceMetadataSchema $invoice_schema): static
    {
        if (is_null($invoice_schema)) {
            array_push($this->openAPINullablesSetToNull, 'invoice_schema');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('invoice_schema', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['invoice_schema'] = $invoice_schema;

        return $this;
    }

    /**
     * Gets invoice_types
     *
     * @return \NetSeven\KseF2Model\InvoiceMetadataInvoiceType[]|null
     */
    public function getInvoiceTypes(): ?array
    {
        return $this->container['invoice_types'];
    }

    /**
     * Sets invoice_types
     *
     * @param \NetSeven\KseF2Model\InvoiceMetadataInvoiceType[]|null $invoice_types Rodzaje faktur.
     *
     * @return $this
     */
    public function setInvoiceTypes(?array $invoice_types): static
    {
        if (is_null($invoice_types)) {
            array_push($this->openAPINullablesSetToNull, 'invoice_types');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('invoice_types', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $allowedValues = self::getInvoiceTypesAllowableValues();
        if (!is_null($invoice_types) && array_diff($invoice_types, $allowedValues)) {
            throw new InvalidArgumentException(
                sprintf(
                    "Invalid value for 'invoice_types', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['invoice_types'] = $invoice_types;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists(mixed $offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[ReturnTypeWillChange]
    public function offsetGet(mixed $offset): mixed
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet(mixed $offset, mixed $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset(mixed $offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[ReturnTypeWillChange]
    public function jsonSerialize(): mixed
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString(): string
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue(): string
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


